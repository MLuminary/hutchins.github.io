{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/templates/post-detail.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/utils/typography.js","webpack:///./src/components/header/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Bio","data","_1130368741","_data$site$siteMetada","site","siteMetadata","author","social","react_default","a","createElement","style","display","marginBottom","rhythm","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","BlogPostTemplate","props","post","markdownRemark","siteTitle","title","_props$pageContext","pageContext","previous","next","layout","location","className","marginTop","frontmatter","Object","assign","scale","date","dangerouslySetInnerHTML","__html","html","bio","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","rel","pageQuery","SEO","_ref","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Header","_823847756","Styles","es","target","Layout","render","_this$props","this","children","Fragment","Header_Header","seo","marginLeft","maxWidth","React","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","json"],"mappings":"iLA0EeA,EAvDH,WAEV,IAAMC,EAAOC,EAAAD,KAFGE,EAsBWF,EAAKG,KAAKC,aAA7BC,EAtBQH,EAsBRG,OAAQC,EAtBAJ,EAsBAI,OAChB,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,QAAO,OACPC,aAAcC,YAAO,OAGvBN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAOf,EAAKgB,OAAOC,gBAAgBF,MACnCG,IAAKb,EACLK,MAAO,CACLS,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBd,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,cAASJ,GADtB,+DAIEE,EAAAC,EAAAC,cAAA,KAAGc,KAAI,uBAAyBjB,EAAOkB,SAAvC,wFCqBOC,UAnEoC,SAACC,GAClD,IAAMC,EAAOD,EAAM1B,KAAK4B,eAClBC,EAAYH,EAAM1B,KAAKG,KAAKC,aAAa0B,MAFaC,EAGjCL,EAAMM,YAAzBC,EAHoDF,EAGpDE,SAAUC,EAH0CH,EAG1CG,KAClB,OACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQR,KAAMA,EAAMS,SAAUV,EAAMU,SAAUN,MAAOD,GACnDtB,EAAAC,EAAAC,cAAA,WAAS4B,UAAU,yBACjB9B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACL4B,UAAWzB,YAAO,GAClBD,aAAc,IAGfe,EAAKY,YAAYT,OAEpBvB,EAAAC,EAAAC,cAAA,KACEC,MAAK8B,OAAAC,OAAA,GACAC,aAAM,IADN,CAEH/B,QAAO,QACPC,aAAcC,YAAO,MAGtBc,EAAKY,YAAYI,OAGtBpC,EAAAC,EAAAC,cAAA,WAASmC,wBAAyB,CAAEC,OAAQlB,EAAKmB,QACjDvC,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLE,aAAcC,YAAO,MAGzBN,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACsC,EAAD,QAIJxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLC,QAAO,OACPqC,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGX5C,EAAAC,EAAAC,cAAA,UACGwB,GACC1B,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAMC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASM,YAAYT,QAI9BvB,EAAAC,EAAAC,cAAA,UACGyB,GACC3B,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAMC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKK,YAAYT,MADpB,WAxDd,IAsEa2B,EAAS,8FCnEtB,SAASC,EAATC,GAAwD,IAAzCC,EAAyCD,EAAzCC,YAAaC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,KAAMhC,EAAgB6B,EAAhB7B,MAC9B3B,EAD8C4D,EAAA/D,KAC9CG,KAcF6D,EAAkBJ,GAAezD,EAAKC,aAAawD,YAEzD,OACEK,EAAAzD,EAAAC,cAACyD,EAAA1D,EAAD,CACE2D,eAAgB,CACdN,QAEF/B,MAAOA,EACPsC,cAAa,QAAUjE,EAAKC,aAAa0B,MACzCgC,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASxC,GAEX,CACEyC,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASnE,EAAKC,aAAaC,QAE7B,CACEgE,KAAI,gBACJC,QAASxC,GAEX,CACEuC,KAAI,sBACJC,QAASN,IAEXQ,OAAOV,KAKfJ,EAAIe,aAAe,CACjBZ,KAAI,KACJC,KAAM,GACNF,YAAW,IAGEF,wCC3FfgB,EAAAC,EAAAC,EAAA,sBAAA/D,IAAA6D,EAAAC,EAAAC,EAAA,sBAAAlC,IAAA,IAAAmC,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAGAE,IAAcC,oBAAsB,WAClC,MAAO,CACLC,2BAA4B,CAC1BC,UAAS,QAEX7E,EAAK,CACH6E,UAAS,iBAKRH,IAAcI,YAErB,IAAMC,EAAa,IAAIC,IAAWN,KAOnBK,IACF1E,EAAS0E,EAAW1E,OACpB6B,EAAQ6C,EAAW7C,kgCCbnB+C,EAA4B,SAAA/D,GAEvC,IAAM1B,EAAO0F,EAAA1F,KAYb,OACEO,EAAAC,EAAAC,cAAA,OAAK4B,UAAWsD,IAAM,WACpBpF,EAAAC,EAAAC,cAAA,OAAK4B,UAAWsD,IAAM,QACpBpF,EAAAC,EAAAC,cAAA,OAAK4B,UAAWsD,IAAM,MACpBpF,EAAAC,EAAAC,cAACmF,EAAA,KAAD,CAAMvD,UAAWsD,IAAM,KAAUtC,GAAG,KAClC9C,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAOf,EAAKgB,OAAOC,gBAAgBF,MACnCG,IAAK,WAIXX,EAAAC,EAAAC,cAAA,OAAK4B,UAAWsD,IAAM,QACpBpF,EAAAC,EAAAC,cAACmF,EAAA,KAAD,CAAMvC,GAAG,IAAIhB,UAAWsD,IAAM,MAC5BpF,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,YAAb,KACA9B,EAAAC,EAAAC,cAAA,QAAM4B,UAAWsD,IAAM,OAAvB,OAEFpF,EAAAC,EAAAC,cAACmF,EAAA,KAAD,CAAMvC,GAAG,QAAQhB,UAAWsD,IAAM,MAChCpF,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,YAAb,KACA9B,EAAAC,EAAAC,cAAA,QAAM4B,UAAWsD,IAAM,OAAvB,OAEFpF,EAAAC,EAAAC,cAACmF,EAAA,KAAD,CAAMvC,GAAG,YAAYhB,UAAWsD,IAAM,MACpCpF,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,YAAb,KACA9B,EAAAC,EAAAC,cAAA,QAAM4B,UAAWsD,IAAM,OAAvB,OAEFpF,EAAAC,EAAAC,cAAA,KAAG4B,UAAWsD,IAAM,KAAUpE,KAAK,+BAA+BsE,OAAO,SAASrC,IAAI,uBACpFjD,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,YAAb,KACA9B,EAAAC,EAAAC,cAAA,QAAM4B,UAAWsD,IAAM,OAAvB,WAEFpF,EAAAC,EAAAC,cAACmF,EAAA,KAAD,CAAMvC,GAAG,SAAShB,UAAWsD,IAAM,MACjCpF,EAAAC,EAAAC,cAAA,KAAG4B,UAAU,YAAb,KACA9B,EAAAC,EAAAC,cAAA,QAAM4B,UAAWsD,IAAM,OAAvB,wBC3CNG,kLACJC,OAAA,WAAS,IAAAC,EAC2BC,KAAKvE,MAA/BwE,EADDF,EACCE,SAAUpE,EADXkE,EACWlE,MAAOH,EADlBqE,EACkBrE,KACnBiC,EAAcjC,GAAOA,EAAKY,YAAcZ,EAAKY,YAAYqB,YAAmB,GAClF,OACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2F,SAAA,KACE5F,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACEvE,MAAOA,EACP8B,YAAaA,IAEfrD,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACL4F,WAAU,OACVnF,YAAW,OACXoF,SAAU1F,YAAO,IACjBsC,QAAYtC,YAAO,KAAZ,IAAoBA,YAAO,OAIpCN,EAAAC,EAAAC,cAAA,YAAOyF,SApBIM,IAAMC,WA2BZX,2BCxCf,IAAsBY,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAArC,EAAA,GAAAsC,EAAAtC,EAAAK,EAAAgC,GAAAE,EAAAvC,EAAA,IAAAwC,EAAAxC,EAAAK,EAAAkC,GAAAvC,EAAAC,EAAAC,EAAA,sBAAAsC,EAAA1G,IAAAkE,EAAAC,EAAAC,EAAA,sBAAAqC,EAAA,WAAAvC,EAAA,KAAAA,EAAA,IAcyByC,QAAOC,QAELZ,IAAMa,cAAc,gFCMhCC,UAjBU,SAAA3D,GAAiC,IAA9BvB,EAA8BuB,EAA9BvB,SAAUmF,EAAoB5D,EAApB4D,cACpC,OAAKA,EAGEf,IAAM/F,cAAc+G,IAApBhF,OAAAC,OAAA,CACLL,WACAmF,iBACGA,EAAcE,OALV","file":"component---src-templates-post-detail-tsx-96427b39ed33e1985193.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\nimport { Site, File } from '../graphql-types'\n\ntype Props = {\n  site: Site,\n  avatar: File\n}\n\nconst Bio = () => {\n  // 查询必须指定路径，获取响应式图片\n  const data = useStaticQuery<Props>(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/me.jpeg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5)\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`\n        }}\n        imgStyle={{\n          borderRadius: `50%`\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong> who lives and works in ShangHai\n        building useful things.\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React, { FunctionComponent } from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport { rhythm, scale } from '../utils/typography'\nimport { Site, MarkdownRemark } from '../graphql-types'\n\ntype Props = {\n  data: {\n    markdownRemark: MarkdownRemark,\n    site: Site\n  },\n  pageContext: {\n    previous: null | MarkdownRemark,\n    next: null | MarkdownRemark\n  },\n  location: Location\n}\n\nconst BlogPostTemplate: FunctionComponent<Props> = (props) => {\n  const post = props.data.markdownRemark\n  const siteTitle = props.data.site.siteMetadata.title // graphql 查询的数据\n  const { previous, next } = props.pageContext // 由 createPage context 传递过来的数据\n  return (\n    <Layout post={post} location={props.location} title={siteTitle}>\n      <article className='post-detail-container'>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1)\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1)\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n                </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n// 可以接受 createPage 中的 context 作为参数\n// $slug 为 context 中的 slug\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO({ description, lang, meta, title }: Props) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"a\": {\n      boxShadow: `none`,\n    }\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React, { FunctionComponent } from 'react'\nimport Styles from './Header.module.styl'\n\nimport Image from 'gatsby-image'\nimport { Link } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { File } from '../../graphql-types'\n\ntype Props = {\n  avatar: File\n}\n\nexport const Header: FunctionComponent = props => {\n\n  const data = useStaticQuery<Props>(graphql`\n    query HeaderQuery {\n      avatar: file(absolutePath: {regex: \"/logo.png/\"}) {\n        childImageSharp {\n          fixed(width: 45, height: 45) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={Styles['container']}>\n      <div className={Styles['header']}>\n        <div className={Styles['logo']}>\n          <Link className={Styles['home']} to='/'>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={'icon'}\n            />\n          </Link>\n        </div>\n        <div className={Styles['navbar']}>\n          <Link to='/' className={Styles['item']}>\n            <i className='iconfont'>&#xe64f;</i>\n            <span className={Styles['title']}>首页</span>\n          </Link>\n          <Link to='/tags' className={Styles['item']}>\n            <i className='iconfont'>&#xe63e;</i>\n            <span className={Styles['title']}>标签</span>\n          </Link>\n          <Link to='/handbook' className={Styles['item']}>\n            <i className='iconfont'>&#xe898;</i>\n            <span className={Styles['title']}>手册</span>\n          </Link>\n          <a className={Styles['item']} href=\"https://github.com/MLuminary\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className='iconfont'>&#xe716;</i>\n            <span className={Styles['title']}>GitHub</span>\n          </a>\n          <Link to='/about' className={Styles['item']}>\n            <i className='iconfont'>&#xe604;</i>\n            <span className={Styles['title']}>关于</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport { Header } from './header';\nimport SEO from './seo';\nimport { MarkdownRemark } from '../graphql-types';\n\ntype Props = {\n  location: Location,\n  title: string,\n  post?: MarkdownRemark\n}\n\nclass Layout extends React.Component<Props> {\n  render() {\n    const { children, title, post } = this.props\n    const description = post ? post.frontmatter ? post.frontmatter.description : '' : ''\n    return (\n      <>\n        <Header />\n        <SEO\n          title={title}\n          description={description}\n        />\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(32),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n          }}\n        >\n\n          <main>{children}</main>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}