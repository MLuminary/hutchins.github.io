{"version":3,"sources":["webpack:///./src/styles/templates/series-list.module.styl","webpack:///./src/templates/series-list.tsx"],"names":["module","exports","Styles","require","SeriesListTemplate","props","seriesList","data","allMarkdownRemark","edges","slice","readme","node","frontmatter","spring","useSpring","opacity","transform","from","width","headerCls","div","style","className","title","description","length","map","x","path","Date","date","getTime","key","id","SeriesQuery"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,OAAS,oCAAoC,KAAO,kCAAkC,QAAU,qCAAqC,MAAQ,mCAAmC,KAAO,kCAAkC,YAAc,yCAAyC,MAAQ,mCAAmC,IAAM,iCAAiC,KAAO,oC,kCCD3X,gHAOMC,EAASC,EAAQ,QAyCRC,UA/BsC,SAAAC,GACnD,IAAMC,EAAaD,EAAME,KAAKC,kBAAkBC,MAAMC,MAAM,GACtDC,EAASN,EAAME,KAAKC,kBAAkBC,MAAM,GAAGG,KAAKC,YACpDC,EAASC,YAAU,CACvBC,QAAS,EACTC,UAAW,qBACXC,KAAM,CAAEF,QAAS,EAAGC,UAAW,2BAA4BE,MAAO,UAEpE,OACE,kBAAC,IAAD,CAAQC,UAAWlB,EAAM,QACvB,kBAAC,IAASmB,IAAV,CAAcC,MAAOR,GACnB,yBAAKS,UAAWrB,EAAM,MACpB,yBAAKqB,UAAWrB,EAAM,SACpB,uBAAGqB,UAAWrB,EAAM,OAApB,IAAiCS,aAAjC,EAAiCA,EAAQa,MAAzC,KACA,yBAAKD,UAAWrB,EAAM,OACtB,uBAAGqB,UAAWrB,EAAM,aAApB,IAAuCS,aAAvC,EAAuCA,EAAQc,YAA/C,KACA,uBAAGF,UAAWrB,EAAM,OAClB,0BAAMqB,UAAWrB,EAAM,KAAvB,IAAkCI,EAAWoB,OAA7C,KADF,SAIF,yBAAKH,UAAWrB,EAAM,MACnBI,EAAWqB,KAAI,SAAAC,GAAK,MACnB,OAAO,kBAAC,IAAD,CAAUC,KAAI,QAAU,IAAIC,KAAJ,UAASF,EAAEhB,KAAKC,mBAAhB,aAAS,EAAoBkB,MAAMC,UAAaC,IAAKL,EAAEhB,KAAKsB,GAAItB,KAAMgB,EAAEhB,eAW9G,IAAMuB,EAAc","file":"component---src-templates-series-list-tsx-8c0e4e5949b71448e7a5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"series-list-module--header--27gnv\",\"main\":\"series-list-module--main--2JRbA\",\"content\":\"series-list-module--content--udTyG\",\"title\":\"series-list-module--title--19eG_\",\"line\":\"series-list-module--line--3Ae1y\",\"description\":\"series-list-module--description--3vEuy\",\"other\":\"series-list-module--other--4PJ-G\",\"num\":\"series-list-module--num--3Qoji\",\"list\":\"series-list-module--list--2PXlB\"};","import React, { FunctionComponent } from 'react'\nimport { MarkdownRemarkConnection, Site } from '@/graphql-types'\nimport { graphql } from 'gatsby'\nimport { useSpring, animated } from 'react-spring'\nimport Layout from '../components/layout/layout'\nimport { PostItem } from '../components/post-item'\n\nconst Styles = require('../styles/templates/series-list.module.styl')\n\ntype Props = {\n  data: {\n    allMarkdownRemark: MarkdownRemarkConnection\n    site: Site\n  }\n  location: Location\n}\n\nconst SeriesListTemplate: FunctionComponent<Props> = props => {\n  const seriesList = props.data.allMarkdownRemark.edges.slice(1)\n  const readme = props.data.allMarkdownRemark.edges[0].node.frontmatter\n  const spring = useSpring({\n    opacity: 1,\n    transform: 'translate3d(0,0,0)',\n    from: { opacity: 0, transform: 'translate3d(0, -50px, 0)', width: '100%' },\n  })\n  return (\n    <Layout headerCls={Styles['header']}>\n      <animated.div style={spring}>\n        <div className={Styles['main']}>\n          <div className={Styles['content']}>\n            <p className={Styles['title']}> {readme?.title} </p>\n            <div className={Styles['line']} />\n            <p className={Styles['description']}> {readme?.description} </p>\n            <p className={Styles['other']}>\n              <span className={Styles['num']}> {seriesList.length} </span> 篇内容\n            </p>\n          </div>\n          <div className={Styles['list']}>\n            {seriesList.map(x => {\n              return <PostItem path={`post-${new Date(x.node.frontmatter?.date).getTime()}`} key={x.node.id} node={x.node} />\n            })}\n          </div>\n        </div>\n      </animated.div>\n    </Layout>\n  )\n}\n\nexport default SeriesListTemplate\n\nexport const SeriesQuery = graphql`\n  query SeriesQueryBySlug($category: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: ASC }, filter: { fileAbsolutePath: { regex: $category } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date\n            description\n            tags\n            title\n          }\n          fields {\n            slug\n          }\n          fileAbsolutePath\n          wordCount {\n            words\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}