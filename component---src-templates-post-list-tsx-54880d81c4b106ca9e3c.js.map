{"version":3,"sources":["webpack:///./src/templates/post-list.tsx"],"names":["BlogPostList","props","data","posts","allMarkdownRemark","edges","transitions","useTransition","post","node","fields","slug","from","transform","opacity","enter","config","duration","trail","map","item","key","div","style","path","Date","frontmatter","date","getTime","query"],"mappings":"4FAAA,0GA4CeA,UAxBgC,SAAAC,GAAS,IAC9CC,EAASD,EAATC,KACOC,GAAUD,aAF6B,EAE7BA,EAAME,mBAAvBC,MAEFC,EAAcC,YAAcJ,GAAO,SAAAK,GAAI,uBAAIA,EAAKC,KAAKC,cAAd,aAAI,EAAkBC,OAAO,CACxEC,KAAM,CAAEC,UAAW,yBAA0BC,QAAS,GACtDC,MAAO,CAAEF,UAAW,uBAAwBC,QAAS,GACrDE,OAAQ,CAAEC,SAAU,KACpBC,MAAO,IAGT,OACE,kBAAC,IAAD,KACGZ,EAAYa,KAAI,YAAoC,MAAzBV,EAAyB,EAAjCW,KAAQX,KAAQR,EAAiB,EAAjBA,MAAOoB,EAAU,EAAVA,IACzC,OACE,kBAAC,IAASC,IAAV,CAAcD,IAAKA,EAAKE,MAAOtB,GAC7B,kBAAC,IAAD,CAAUuB,KAAI,eAAiB,IAAIC,KAAJ,UAAShB,EAAKiB,mBAAd,aAAS,EAAkBC,MAAMC,UAAanB,KAAMA,UAUxF,IAAMoB,EAAQ","file":"component---src-templates-post-list-tsx-54880d81c4b106ca9e3c.js","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport { animated, useTransition } from 'react-spring'\nimport Layout from '../components/layout/layout'\nimport { PostItem } from '../components/post-item'\nimport { MarkdownRemarkConnection, Site } from '../graphql-types'\n\ntype Props = {\n  data: {\n    allMarkdownRemark: MarkdownRemarkConnection\n    site: Site\n  }\n  pageContext: {\n    page: number\n    limit: number\n    skip: number\n  }\n  location: Location\n}\n\nconst BlogPostList: FunctionComponent<Props> = props => {\n  const { data } = props\n  const { edges: posts } = data?.allMarkdownRemark\n\n  const transitions = useTransition(posts, post => post.node.fields?.slug!, {\n    from: { transform: 'translate3d(200px,0,0)', opacity: 0 },\n    enter: { transform: 'translate3d(0,0px,0)', opacity: 1 },\n    config: { duration: 300 },\n    trail: 5,\n  })\n\n  return (\n    <Layout>\n      {transitions.map(({ item: { node }, props, key }) => {\n        return (\n          <animated.div key={key} style={props}>\n            <PostItem path={`/posts/post-${new Date(node.frontmatter?.date).getTime()}`} node={node} />\n          </animated.div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogPostList\n\nexport const query = graphql`\n  query PostListQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }, filter: { fileAbsolutePath: { regex: \"/blog/\" } }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            date\n            description\n            tags\n            title\n          }\n          fields {\n            slug\n          }\n          fileAbsolutePath\n          wordCount {\n            words\n          }\n          timeToRead\n        }\n      }\n    }\n    dataYaml {\n      createPageConfig {\n        activeLayout\n        posts {\n          listPath\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}