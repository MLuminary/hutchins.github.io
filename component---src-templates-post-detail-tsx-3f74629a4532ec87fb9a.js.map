{"version":3,"sources":["webpack:///./src/templates/post-detail.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/utils/typography.js","webpack:///./src/components/header/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["BlogPostTemplate","props","post","data","markdownRemark","siteTitle","site","siteMetadata","title","_props$pageContext","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","className","style","marginTop","rhythm","marginBottom","frontmatter","Object","assign","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","pageQuery","SEO","_ref","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Header","_823847756","react_default","Styles","es","gatsby_image_default","fixed","avatar","childImageSharp","alt","href","target","Layout","render","_this$props","this","children","Fragment","Header_Header","seo","marginLeft","marginRight","maxWidth","React","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-templates-post-detail-tsx-3f74629a4532ec87fb9a.js","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport { rhythm, scale } from '../utils/typography'\nimport { Site, MarkdownRemark } from '../graphql-types'\n\ntype Props = {\n  data: {\n    markdownRemark: MarkdownRemark,\n    site: Site\n  },\n  pageContext: {\n    previous: null | MarkdownRemark,\n    next: null | MarkdownRemark\n  },\n  location: Location\n}\n\nconst BlogPostTemplate: FunctionComponent<Props> = (props) => {\n  const post = props.data.markdownRemark\n  const siteTitle = props.data.site.siteMetadata.title // graphql 查询的数据\n  const { previous, next } = props.pageContext // 由 createPage context 传递过来的数据\n  return (\n    <Layout post={post} location={props.location} title={siteTitle}>\n      <article className='post-detail-container'>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1)\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n                </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n// 可以接受 createPage 中的 context 作为参数\n// $slug 为 context 中的 slug\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO({ description, lang, meta, title }: Props) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"a\": {\n      boxShadow: `none`,\n    }\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React, { FunctionComponent } from 'react'\nimport Styles from './Header.module.styl'\n\nimport Image from 'gatsby-image'\nimport { Link } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { File } from '../../graphql-types'\n\ntype Props = {\n  avatar: File\n}\n\nexport const Header: FunctionComponent = props => {\n\n  const data = useStaticQuery<Props>(graphql`\n    query HeaderQuery {\n      avatar: file(absolutePath: {regex: \"/logo.png/\"}) {\n        childImageSharp {\n          fixed(width: 45, height: 45) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={Styles['container']}>\n      <div className={Styles['header']}>\n        <div className={Styles['logo']}>\n          <Link className={Styles['home']} to='/'>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={'icon'}\n            />\n          </Link>\n        </div>\n        <div className={Styles['navbar']}>\n          <Link to='/' className={Styles['item']}>\n            <i className='iconfont'>&#xe64f;</i>\n            <span className={Styles['title']}>首页</span>\n          </Link>\n          <Link to='/tags' className={Styles['item']}>\n            <i className='iconfont'>&#xe63e;</i>\n            <span className={Styles['title']}>标签</span>\n          </Link>\n          <Link to='/handbook' className={Styles['item']}>\n            <i className='iconfont'>&#xe898;</i>\n            <span className={Styles['title']}>手册</span>\n          </Link>\n          <a className={Styles['item']} href=\"https://github.com/MLuminary\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className='iconfont'>&#xe716;</i>\n            <span className={Styles['title']}>GitHub</span>\n          </a>\n          <Link to='/about' className={Styles['item']}>\n            <i className='iconfont'>&#xe604;</i>\n            <span className={Styles['title']}>关于</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport { Header } from './header';\nimport SEO from './seo';\nimport { MarkdownRemark } from '../graphql-types';\n\ntype Props = {\n  location: Location,\n  title: string,\n  post?: MarkdownRemark\n}\n\nclass Layout extends React.Component<Props> {\n  render() {\n    const { children, title, post } = this.props\n    const description = post ? post.frontmatter ? post.frontmatter.description : '' : ''\n    return (\n      <>\n        <Header />\n        <SEO\n          title={title}\n          description={description}\n        />\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(32),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n          }}\n        >\n\n          <main>{children}</main>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}