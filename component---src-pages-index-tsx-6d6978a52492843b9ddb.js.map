{"version":3,"sources":["webpack:///./src/styles/pages/index.module.styl","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/easy-typer-js/src/lib/index.js","webpack:///./src/pages/index.tsx","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js"],"names":["module","exports","_classCallCheck","instance","Constructor","TypeError","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","EasyTyper","obj","input","fn","hooks","this","checkKeyIsNull","checkFieldIsError","timer","typeAction","rollback","typedBack","bind","normal","play","custom","init","key","_this","length","i","stop","shift","setInterval","closeTimer","isEnd","nextTick","output","slice","speed","_this2","sentencePause","singleBack","backSpeed","mark","_callee","wrap","_context","prev","sleep","abrupt","getOutputType","type","clearInterval","ms","setTimeout","errorTip","message","Error","propsKeys","Object","keys","objKeys","forEach","undefined","proxy","EasyTyperStrategy","check","showTip","CheckField","field","concat","name","Styles","require","ReadInBook","sentence","from","Me","useState","setOutput","typer","useRef","currentBook","useMemo","random","Math","ceil","useEffect","current","close","className","to","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","toString","object","push","reverse","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","Function","define","defineProperty","enumerable","configurable","writable","PromiseImpl","error","accidentalStrictMode","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps"],"mappings":"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","file":"component---src-pages-index-tsx-6d6978a52492843b9ddb.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"index-module--content--TeCGk\",\"word\":\"index-module--word--MNID3\",\"sentence\":\"index-module--sentence--3YS1Q\",\"from\":\"index-module--from--3E0xU\",\"cursor\":\"index-module--cursor--1dIl8\",\"blink\":\"index-module--blink--F89O1\",\"link\":\"index-module--link--1aAMO\"};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _regeneratorRuntime from \"/Users/zhanghaoqin/gitMaster/Silence/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime\";\nimport _classCallCheck from \"/Users/zhanghaoqin/gitMaster/Silence/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhanghaoqin/gitMaster/Silence/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar EasyTyper = /*#__PURE__*/function () {\n  function EasyTyper(obj, input, fn, hooks) {\n    _classCallCheck(this, EasyTyper);\n\n    checkKeyIsNull(obj);\n    checkFieldIsError(obj);\n    this.obj = obj;\n    this.input = typeof input === 'string' ? [input] : input;\n    this.fn = typeof fn === 'function' ? fn : function () {};\n    this.hooks = typeof hooks === 'function' ? hooks : function () {};\n    this.timer = 0;\n    this.typeAction = {\n      rollback: this.typedBack.bind(this),\n      normal: this.play.bind(this),\n      custom: this.fn\n    }; // 实例化完后立即执行打字输出\n\n    this.init();\n  } // 初始化\n\n\n  _createClass(EasyTyper, [{\n    key: \"init\",\n    value: function init() {\n      this.play();\n    } // 打字\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _this = this;\n\n      if (!this.input.length) return this.fn(this);\n      var i = 0,\n          stop = false,\n          input = this.input.shift() || '';\n      this.timer = setInterval(function () {\n        if (i === input.length) {\n          i = 0;\n          stop = true;\n\n          _this.closeTimer();\n        }\n\n        if (_this.obj.isEnd) return _this.closeTimer();\n        if (stop) return _this.nextTick();\n        _this.obj.output = input.slice(0, i + 1);\n\n        _this.hooks(input.slice(0, i + 1), _this);\n\n        i++;\n      }, this.obj.speed);\n    } // 回滚方法\n\n  }, {\n    key: \"typedBack\",\n    value: function typedBack() {\n      var _this2 = this;\n\n      // 如果句子出书完毕，且是句子暂停模式\n      if (!this.input.length && this.obj.sentencePause) return this.fn(this);\n      var input = this.obj.output;\n      var i = input.length,\n          stop = false;\n      this.timer = setInterval(function () {\n        if (i === -1) {\n          _this2.obj.output = '';\n\n          _this2.hooks('', _this2);\n\n          i = 0;\n          stop = true;\n\n          _this2.closeTimer();\n        }\n\n        if (_this2.obj.isEnd) {\n          _this2.closeTimer();\n\n          return _this2.obj.singleBack = false;\n        }\n\n        if (stop) {\n          _this2.obj.singleBack = false;\n          return function () {\n            var length = _this2.input.length;\n            return length ? _this2.play() : _this2.fn(_this2);\n          }();\n        }\n\n        _this2.obj.output = input.slice(0, i + 1);\n\n        _this2.hooks(input.slice(0, i + 1), _this2);\n\n        i--;\n      }, this.obj.backSpeed);\n    } // 下一次触发方式\n\n  }, {\n    key: \"nextTick\",\n    value: function nextTick() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.sleep(this.obj.sleep);\n\n              case 2:\n                return _context.abrupt(\"return\", this.obj.singleBack ? this.typedBack() : this.getOutputType());\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    } // 输出方式\n\n  }, {\n    key: \"getOutputType\",\n    value: function getOutputType() {\n      return this.typeAction[this.obj.type](this);\n    } // 关闭定时器\n\n  }, {\n    key: \"closeTimer\",\n    value: function closeTimer() {\n      clearInterval(this.timer);\n    } // 线程等待\n\n  }, {\n    key: \"sleep\",\n    value: function sleep(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    } // 结束\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.obj.isEnd = true;\n    }\n  }]);\n\n  return EasyTyper;\n}(); // 错误提示语\n\n\nvar errorTip = function errorTip(message) {\n  throw new Error(message);\n}; // 校验参数完整性\n\n\nvar checkKeyIsNull = function checkKeyIsNull(obj) {\n  var props = {\n    output: '',\n    type: '',\n    isEnd: false,\n    speed: 80,\n    backSpeed: 40,\n    sleep: 3000,\n    singleBack: false,\n    sentencePause: false\n  };\n  var propsKeys = Object.keys(props);\n  var objKeys = Object.keys(obj);\n\n  if (propsKeys.length !== objKeys.length) {\n    errorTip('配置对象错误: 字段数量不正确！');\n  }\n\n  propsKeys.forEach(function (key) {\n    if (obj[key] === undefined || obj[key] === null) {\n      errorTip('配置对象错误：字段值为null或undefined！');\n    }\n  });\n}; // 检验参数类型\n\n\nvar checkFieldIsError = function checkFieldIsError(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var proxy = EasyTyperStrategy[key](obj);\n\n    if (proxy.check()) {\n      proxy.showTip(key);\n    }\n  });\n}; // 策略分发\n\n\nvar EasyTyperStrategy = function () {\n  return {\n    output: function output(obj) {\n      return new CheckField(\"string\", obj.output);\n    },\n    type: function type(obj) {\n      return new CheckField(\"string\", obj.type);\n    },\n    isEnd: function isEnd(obj) {\n      return new CheckField(\"boolean\", obj.isEnd);\n    },\n    speed: function speed(obj) {\n      return new CheckField(\"number\", obj.speed);\n    },\n    backSpeed: function backSpeed(obj) {\n      return new CheckField(\"number\", obj.backSpeed);\n    },\n    sleep: function sleep(obj) {\n      return new CheckField(\"number\", obj.sleep);\n    },\n    singleBack: function singleBack(obj) {\n      return new CheckField(\"boolean\", obj.singleBack);\n    },\n    sentencePause: function sentencePause(obj) {\n      return new CheckField(\"boolean\", obj.sentencePause);\n    }\n  };\n}(); // 字段校验类\n\n\nvar CheckField = /*#__PURE__*/function () {\n  function CheckField(type, field) {\n    _classCallCheck(this, CheckField);\n\n    this.type = type;\n    this.field = field;\n  }\n\n  _createClass(CheckField, [{\n    key: \"check\",\n    value: function check() {\n      return typeof this.field !== \"\".concat(this.type);\n    }\n  }, {\n    key: \"showTip\",\n    value: function showTip(name) {\n      errorTip(\"\\u914D\\u7F6E\\u5BF9\\u8C61\\u9519\\u8BEF\\uFF1A\\u5C5E\\u6027 \".concat(name, \" \\u5FC5\\u987B\\u4E3A \").concat(this.type, \" \\u7C7B\\u578B\\uFF01\"));\n    }\n  }]);\n\n  return CheckField;\n}();\n\nexport default EasyTyper;","import React, { FunctionComponent, useState, useRef, useEffect, useMemo } from 'react'\nimport EasyTyper from 'easy-typer-js'\nimport { Link } from 'gatsby'\nimport { Site } from '../graphql-types'\n\nconst Styles = require('../styles/pages/index.module.styl')\n\ntype Props = {\n  data: {\n    site: Site\n  }\n  location: Location\n}\n\ntype Book = {\n  sentence: string\n  from: string\n}\n\nconst ReadInBook: Book[] = [\n  {\n    sentence: '痛苦是财富，这话是扯淡。痛苦就是痛苦，对痛苦的思考才是财富。',\n    from: '看见',\n  },\n  {\n    sentence: '负面的情绪就像黑暗一样，你是驱散不走它们的。你唯一做的，就是带进光来',\n    from: '遇见未知的自己',\n  },\n  {\n    sentence: '当你觉得自己不行的时候你就走到斑马线上，这时候你就是个行人了',\n    from: '遇见未知的自己',\n  },\n]\n\nconst Me: FunctionComponent<Props> = () => {\n  const [output, setOutput] = useState<string>('')\n  const typer = useRef<EasyTyper>()\n\n  const currentBook = useMemo(() => {\n    const random = Math.ceil(Math.random() * ReadInBook.length)\n    return ReadInBook[random] || ReadInBook[0]\n  }, [])\n\n  useEffect(() => {\n    // 配置对象\n    const obj = {\n      output: '',\n      isEnd: false,\n      speed: 150,\n      singleBack: false,\n      sleep: 1000,\n      type: 'normal',\n      backSpeed: 40,\n      sentencePause: false,\n    }\n    // 实例化\n    typer.current = new EasyTyper(\n      obj,\n      currentBook.sentence,\n      () => {},\n      (output: string) => {\n        setOutput(output)\n      },\n    )\n\n    return () => {\n      typer.current?.close()\n    }\n  }, [])\n\n  return (\n    <>\n      <div className={Styles['content']}>\n        <div className={Styles['word']}>\n          <div className={Styles['sentence']}>\n            {output}\n            <span className={Styles['cursor']}>|</span>\n          </div>\n          <div className={Styles['from']}> --《{currentBook.from}》</div>\n        </div>\n        <Link className={Styles['link']} to='/posts'>\n          Enter\n        </Link>\n      </div>\n    </>\n  )\n}\n\nexport default Me\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}"],"sourceRoot":""}