{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/header/Header.tsx","webpack:///./src/components/layout/layout.tsx"],"names":["Styles","require","NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","className","controls","autoPlay","src","type","React","Component","pageQuery","SEO","_ref","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","_823847756","react_default","es","to","gatsby_image_default","fixed","avatar","childImageSharp","alt","href","target","rel","Layout","_this$props","children","post","frontmatter","Header_Header","seo"],"mappings":"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","file":"component---src-pages-about-tsx-69e75b929af193868899.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo'\n\nconst Styles = require('../styles/pages/about.module.styl')\n\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  data: {\n    site: Site\n  }\n  location: Location\n}\n\nclass NotFoundPage extends React.Component<Props> {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata!.title!\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"it's me\" />\n        <div className={Styles['content']}>\n          <div className={Styles['avatar']} />\n          <div className={Styles['name']}>Haoqin Zhang</div>\n          <div className={Styles['info']}>Coding Lover</div>\n          <div className={Styles['music']}>\n            <audio controls={true} autoPlay={true}>\n              <source src=\"../../static/music/me.mp3\" type='audio/mp3' />\n            </audio>\n          </div>\n          <div className={Styles['description']}>\n            ÁÉ≠Áà±ËøΩÊ±ÇÊñ∞‰∫ãÁâ© üê±Èì≤Â±éÂÆò Áà±Âî±Ê≠å ÂñúÊ¨¢ÊâìÊ∏∏Êàè\n          </div>\n          <div className={Styles['loveWord']}>\n            \"ÁóõËã¶ÊòØË¥¢ÂØåÔºåËøôËØùÊòØÊâØÊ∑°„ÄÇÂßëÂ®òÔºåÁóõËã¶Â∞±ÊòØÁóõËã¶Ôºå\" ‰ªñËØ¥, \"ÂØπÁóõËã¶ÁöÑÊÄùËÄÉÊâçÊòØË¥¢ÂØå\" --- „ÄäÁúãËßÅ„Äã\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO({ description, lang, meta, title }: Props) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React, { FunctionComponent } from 'react'\nimport Styles from './Header.module.styl'\n\nimport Image from 'gatsby-image'\nimport { Link } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { File } from '../../graphql-types'\n\ntype Props = {\n  avatar: File\n}\n\nexport const Header: FunctionComponent = props => {\n\n  const data = useStaticQuery<Props>(graphql`\n    query HeaderQuery {\n      avatar: file(absolutePath: {regex: \"/logo.png/\"}) {\n        childImageSharp {\n          fixed(width: 45, height: 45) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={Styles['container']}>\n      <div className={Styles['header']}>\n        <div className={Styles['logo']}>\n          <Link className={Styles['home']} to='/'>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={'icon'}\n            />\n          </Link>\n        </div>\n        <div className={Styles['navbar']}>\n          <Link to='/' className={Styles['item']}>\n            <i className='iconfont'>&#xe64f;</i>\n            <span className={Styles['title']}>È¶ñÈ°µ</span>\n          </Link>\n          {/* <Link to='/tags' className={Styles['item']}>\n            <i className='iconfont'>&#xe63e;</i>\n            <span className={Styles['title']}>Ê†áÁ≠æ</span>\n          </Link>\n          <Link to='/handbook' className={Styles['item']}>\n            <i className='iconfont'>&#xe898;</i>\n            <span className={Styles['title']}>ÊâãÂÜå</span>\n          </Link> */}\n          <a className={Styles['item']} href=\"https://github.com/MLuminary\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className='iconfont'>&#xe716;</i>\n            <span className={Styles['title']}>GitHub</span>\n          </a>\n          <Link to='/about' className={Styles['item']}>\n            <i className='iconfont'>&#xe604;</i>\n            <span className={Styles['title']}>ÂÖ≥‰∫é</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { Header } from '../header';\nimport SEO from '../seo';\nimport { MarkdownRemark } from '../../graphql-types';\nimport { Footer } from '../footer';\nimport Styles from './layout.module.styl'\n\ntype Props = {\n  location: Location,\n  title: string,\n  post?: MarkdownRemark\n}\n\nclass Layout extends React.Component<Props> {\n  render() {\n    const { children, title, post } = this.props\n    const description = post ? post.frontmatter ? post.frontmatter.description : '' : ''\n    return (\n      <div className={Styles['container']}>\n        <Header />\n        <SEO\n          title={title}\n          description={description}\n        />\n        <div className={Styles['content']}>\n          {children}\n        </div>\n        {/* <Footer /> */}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}