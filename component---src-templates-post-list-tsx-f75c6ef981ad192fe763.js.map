{"version":3,"sources":["webpack:///./src/templates/post-list.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/utils/typography.js","webpack:///./src/components/header/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_paginate__WEBPACK_IMPORTED_MODULE_2__","react_paginate__WEBPACK_IMPORTED_MODULE_2___default","_styles_templates_post_list_module_styl__WEBPACK_IMPORTED_MODULE_3__","_styles_templates_post_list_module_styl__WEBPACK_IMPORTED_MODULE_3___default","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","react_markdown__WEBPACK_IMPORTED_MODULE_6__","react_markdown__WEBPACK_IMPORTED_MODULE_6___default","monthInEng","BlogPostList","props","data","siteTitle","site","siteMetadata","title","_data$allMarkdownRema","allMarkdownRemark","posts","edges","totalCount","_props$pageContext","pageContext","page","size","limit","pageCount","Math","ceil","a","createElement","location","map","_ref","node","frontmatter","fields","slug","className","Styles","key","Date","date","getMonth","getDay","getFullYear","to","tags","tag","Fragment","timeToRead","source","description","excerpt","pageRangeDisplayed","previousLabel","initialPage","nextLabel","onPageChange","selected","navigate","containerClassName","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","rhythm","scale","Header","_823847756","react_default","es","gatsby_image_default","fixed","avatar","childImageSharp","alt","href","target","rel","Layout","render","_this$props","this","children","post","Header_Header","seo","style","marginLeft","marginRight","maxWidth","padding","React","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-templates-post-list-tsx-f75c6ef981ad192fe763.js","sourcesContent":["import { graphql, Link, navigate } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport { MarkdownRemarkConnection, Site } from \"../graphql-types\";\nimport ReactPaginate from 'react-paginate'\nimport Styles from '../styles/templates/post-list.module.styl'\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport ReactMarkdown from 'react-markdown'\n\ntype Props = {\n  data: {\n    allMarkdownRemark: MarkdownRemarkConnection,\n    site: Site\n  },\n  pageContext: {\n    page: number\n    limit: number,\n    skip: number\n  },\n  location: Location\n}\n\nconst monthInEng = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nconst BlogPostList: FunctionComponent<Props> = props => {\n\n  const { data } = props\n  const { title: siteTitle } = data.site.siteMetadata\n  const { edges: posts, totalCount } = data.allMarkdownRemark\n  const { page, limit: size } = props.pageContext\n\n  const pageCount = Math.ceil(totalCount / size)\n\n  const handlePageChangeClick = (data: { selected: number }) => {\n    const page = data.selected + 1\n    if (page === 1) {\n      navigate('/')\n      return\n    }\n\n    navigate(`/posts/page/${page}`)\n  }\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <div className={Styles['post']} key={node.fields.slug}>\n            <div className={Styles['date']}>\n              <div className={Styles['up']}>\n                <div className={Styles['month']}>{monthInEng[new Date(node.frontmatter.date).getMonth()]}</div>\n                <div className={Styles['day']}>{new Date(node.frontmatter.date).getDay()}</div>\n              </div>\n              <div className={Styles['year']}>{new Date(node.frontmatter.date).getFullYear()}</div>\n            </div>\n            <div className={Styles['content']}>\n              <div className={Styles['header']}>\n                <Link className={Styles['title']} to={`/post-${node.frontmatter.date}`}>\n                  {title}\n                </Link>\n              </div>\n              <div className={Styles['info']}>\n                {\n                  node.frontmatter.tags.map(tag => (\n                    <React.Fragment key={tag}>\n                      <i className='iconfont'>&#xe63e;</i>\n                      <Link to='/tags' className={Styles['tag']}>{tag}</Link>\n                      <span className={Styles['line']}>·</span>\n                    </React.Fragment>\n                  ))\n                }\n                {node.timeToRead + 1} min read\n                  <span className={Styles['time']}>\n                  <span className={Styles['line']}>·</span>\n                  {new Date(node.frontmatter.date).getFullYear()}<span>年</span>\n                  {new Date(node.frontmatter.date).getMonth() + 1}<span>月</span>\n                  {new Date(node.frontmatter.date).getDay()}<span>日</span>\n                </span>\n              </div>\n              <div className={Styles['brief']}>\n                <ReactMarkdown source={node.frontmatter.description || node.excerpt} />\n              </div>\n              <Link to={node.fields.slug} className={Styles['more']}>Read More</Link>\n            </div>\n          </div>\n        )\n      })}\n      <ReactPaginate\n        pageCount={pageCount}\n        pageRangeDisplayed={size}\n        previousLabel={'←'}\n        initialPage={page}\n        nextLabel={'→'}\n        onPageChange={handlePageChangeClick}\n        containerClassName={Styles['pagination']}\n      // breakClassName={Styles['li']}\n      // breakLinkClassName={Styles['a']}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogPostList\n\nexport const query = graphql`\n\tquery PostListQuery($skip: Int, $limit: Int) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\t\tallMarkdownRemark(\n\t\t\tlimit: $limit\n\t\t\tskip: $skip\n\t\t\tsort: { order: DESC, fields: frontmatter___date }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\ttags\n\t\t\t\t\t\ttitle\n          }\n          fields {\n            slug\n          }\n\t\t\t\t\tfileAbsolutePath\n\t\t\t\t\twordCount {\n\t\t\t\t\t\twords\n\t\t\t\t\t}\n          timeToRead\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdataYaml {\n\t\t\tcreatePageConfig {\n\t\t\t\tactiveLayout\n\t\t\t\tposts {\n\t\t\t\t\tlistPath\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO({ description, lang, meta, title }: Props) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"a\": {\n      boxShadow: `none`,\n    }\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React, { FunctionComponent } from 'react'\nimport Styles from './Header.module.styl'\n\nimport Image from 'gatsby-image'\nimport { Link } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { File } from '../../graphql-types'\n\ntype Props = {\n  avatar: File\n}\n\nexport const Header: FunctionComponent = props => {\n\n  const data = useStaticQuery<Props>(graphql`\n    query HeaderQuery {\n      avatar: file(absolutePath: {regex: \"/logo.png/\"}) {\n        childImageSharp {\n          fixed(width: 45, height: 45) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={Styles['container']}>\n      <div className={Styles['header']}>\n        <div className={Styles['logo']}>\n          <Link className={Styles['home']} to='/'>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={'icon'}\n            />\n          </Link>\n        </div>\n        <div className={Styles['navbar']}>\n          <Link to='/' className={Styles['item']}>\n            <i className='iconfont'>&#xe64f;</i>\n            <span className={Styles['title']}>首页</span>\n          </Link>\n          {/* <Link to='/tags' className={Styles['item']}>\n            <i className='iconfont'>&#xe63e;</i>\n            <span className={Styles['title']}>标签</span>\n          </Link>\n          <Link to='/handbook' className={Styles['item']}>\n            <i className='iconfont'>&#xe898;</i>\n            <span className={Styles['title']}>手册</span>\n          </Link> */}\n          <a className={Styles['item']} href=\"https://github.com/MLuminary\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className='iconfont'>&#xe716;</i>\n            <span className={Styles['title']}>GitHub</span>\n          </a>\n          {/* <Link to='/about' className={Styles['item']}>\n            <i className='iconfont'>&#xe604;</i>\n            <span className={Styles['title']}>关于</span>\n          </Link> */}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport { Header } from './header';\nimport SEO from './seo';\nimport { MarkdownRemark } from '../graphql-types';\n\ntype Props = {\n  location: Location,\n  title: string,\n  post?: MarkdownRemark\n}\n\nclass Layout extends React.Component<Props> {\n  render() {\n    const { children, title, post } = this.props\n    const description = post ? post.frontmatter ? post.frontmatter.description : '' : ''\n    return (\n      <>\n        <Header />\n        <SEO\n          title={title}\n          description={description}\n        />\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(32),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n          }}\n        >\n\n          <main>{children}</main>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}