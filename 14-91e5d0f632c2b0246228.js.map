{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/easy-typer-js/src/lib/index.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","__webpack_require__","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","runtime","exports","undefined","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","createHTML","url","_Users_zhanghaoqin_gitMaster_Silence_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__","_Users_zhanghaoqin_gitMaster_Silence_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","n","_Users_zhanghaoqin_gitMaster_Silence_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_7__","_Users_zhanghaoqin_gitMaster_Silence_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__","__awaiter","thisArg","_arguments","P","fulfilled","step","e","rejected","apply","EasyTyper","input","hooks","checkKeyIsNull","checkFieldIsError","timer","typeAction","rollback","typedBack","bind","normal","play","custom","init","_this","shift","setInterval","closeTimer","isEnd","nextTick","output","speed","_this2","sentencePause","singleBack","backSpeed","a","_callee","_context","sleep","getOutputType","clearInterval","ms","setTimeout","errorTip","message","propsKeys","objKeys","proxy","EasyTyperStrategy","check","showTip","CheckField","field","concat"],"mappings":"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","file":"14-91e5d0f632c2b0246228.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport _regeneratorRuntime from \"/Users/zhanghaoqin/gitMaster/Silence/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime\";\nimport \"core-js/modules/es6.function.bind\";\nimport _classCallCheck from \"/Users/zhanghaoqin/gitMaster/Silence/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhanghaoqin/gitMaster/Silence/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar EasyTyper =\n/*#__PURE__*/\nfunction () {\n  function EasyTyper(obj, input, fn, hooks) {\n    _classCallCheck(this, EasyTyper);\n\n    checkKeyIsNull(obj);\n    checkFieldIsError(obj);\n    this.obj = obj;\n    this.input = typeof input === 'string' ? [input] : input;\n    this.fn = typeof fn === 'function' ? fn : function () {};\n    this.hooks = typeof hooks === 'function' ? hooks : function () {};\n    this.timer = 0;\n    this.typeAction = {\n      rollback: this.typedBack.bind(this),\n      normal: this.play.bind(this),\n      custom: this.fn\n    }; // 实例化完后立即执行打字输出\n\n    this.init();\n  } // 初始化\n\n\n  _createClass(EasyTyper, [{\n    key: \"init\",\n    value: function init() {\n      this.play();\n    } // 打字\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _this = this;\n\n      if (!this.input.length) return this.fn(this);\n      var i = 0,\n          stop = false,\n          input = this.input.shift() || '';\n      this.timer = setInterval(function () {\n        if (i === input.length) {\n          i = 0;\n          stop = true;\n\n          _this.closeTimer();\n        }\n\n        if (_this.obj.isEnd) return _this.closeTimer();\n        if (stop) return _this.nextTick();\n        _this.obj.output = input.slice(0, i + 1);\n\n        _this.hooks(input.slice(0, i + 1), _this);\n\n        i++;\n      }, this.obj.speed);\n    } // 回滚方法\n\n  }, {\n    key: \"typedBack\",\n    value: function typedBack() {\n      var _this2 = this;\n\n      // 如果句子出书完毕，且是句子暂停模式\n      if (!this.input.length && this.obj.sentencePause) return this.fn(this);\n      var input = this.obj.output;\n      var i = input.length,\n          stop = false;\n      this.timer = setInterval(function () {\n        if (i === -1) {\n          _this2.obj.output = '';\n\n          _this2.hooks('', _this2);\n\n          i = 0;\n          stop = true;\n\n          _this2.closeTimer();\n        }\n\n        if (_this2.obj.isEnd) {\n          _this2.closeTimer();\n\n          return _this2.obj.singleBack = false;\n        }\n\n        if (stop) {\n          _this2.obj.singleBack = false;\n          return function () {\n            var length = _this2.input.length;\n            return length ? _this2.play() : _this2.fn(_this2);\n          }();\n        }\n\n        _this2.obj.output = input.slice(0, i + 1);\n\n        _this2.hooks(input.slice(0, i + 1), _this2);\n\n        i--;\n      }, this.obj.backSpeed);\n    } // 下一次触发方式\n\n  }, {\n    key: \"nextTick\",\n    value: function nextTick() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.sleep(this.obj.sleep);\n\n              case 2:\n                return _context.abrupt(\"return\", this.obj.singleBack ? this.typedBack() : this.getOutputType());\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    } // 输出方式\n\n  }, {\n    key: \"getOutputType\",\n    value: function getOutputType() {\n      return this.typeAction[this.obj.type](this);\n    } // 关闭定时器\n\n  }, {\n    key: \"closeTimer\",\n    value: function closeTimer() {\n      clearInterval(this.timer);\n    } // 线程等待\n\n  }, {\n    key: \"sleep\",\n    value: function sleep(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    } // 结束\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.obj.isEnd = true;\n    }\n  }]);\n\n  return EasyTyper;\n}(); // 错误提示语\n\n\nvar errorTip = function errorTip(message) {\n  throw new Error(message);\n}; // 校验参数完整性\n\n\nvar checkKeyIsNull = function checkKeyIsNull(obj) {\n  var props = {\n    output: '',\n    type: '',\n    isEnd: false,\n    speed: 80,\n    backSpeed: 40,\n    sleep: 3000,\n    singleBack: false,\n    sentencePause: false\n  };\n  var propsKeys = Object.keys(props);\n  var objKeys = Object.keys(obj);\n\n  if (propsKeys.length !== objKeys.length) {\n    errorTip('配置对象错误: 字段数量不正确！');\n  }\n\n  propsKeys.forEach(function (key) {\n    if (obj[key] === undefined || obj[key] === null) {\n      errorTip('配置对象错误：字段值为null或undefined！');\n    }\n  });\n}; // 检验参数类型\n\n\nvar checkFieldIsError = function checkFieldIsError(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var proxy = EasyTyperStrategy[key](obj);\n\n    if (proxy.check()) {\n      proxy.showTip(key);\n    }\n  });\n}; // 策略分发\n\n\nvar EasyTyperStrategy = function () {\n  return {\n    output: function output(obj) {\n      return new CheckField(\"string\", obj.output);\n    },\n    type: function type(obj) {\n      return new CheckField(\"string\", obj.type);\n    },\n    isEnd: function isEnd(obj) {\n      return new CheckField(\"boolean\", obj.isEnd);\n    },\n    speed: function speed(obj) {\n      return new CheckField(\"number\", obj.speed);\n    },\n    backSpeed: function backSpeed(obj) {\n      return new CheckField(\"number\", obj.backSpeed);\n    },\n    sleep: function sleep(obj) {\n      return new CheckField(\"number\", obj.sleep);\n    },\n    singleBack: function singleBack(obj) {\n      return new CheckField(\"boolean\", obj.singleBack);\n    },\n    sentencePause: function sentencePause(obj) {\n      return new CheckField(\"boolean\", obj.sentencePause);\n    }\n  };\n}(); // 字段校验类\n\n\nvar CheckField =\n/*#__PURE__*/\nfunction () {\n  function CheckField(type, field) {\n    _classCallCheck(this, CheckField);\n\n    this.type = type;\n    this.field = field;\n  }\n\n  _createClass(CheckField, [{\n    key: \"check\",\n    value: function check() {\n      return typeof this.field !== \"\".concat(this.type);\n    }\n  }, {\n    key: \"showTip\",\n    value: function showTip(name) {\n      errorTip(\"\\u914D\\u7F6E\\u5BF9\\u8C61\\u9519\\u8BEF\\uFF1A\\u5C5E\\u6027 \".concat(name, \" \\u5FC5\\u987B\\u4E3A \").concat(this.type, \" \\u7C7B\\u578B\\uFF01\"));\n    }\n  }]);\n\n  return CheckField;\n}();\n\nexport default EasyTyper;","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}