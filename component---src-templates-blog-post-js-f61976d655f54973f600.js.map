{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.tsx","webpack:///./src/utils/typography.js","webpack:///./src/components/header/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Bio","data","_1130368741","_data$site$siteMetada","site","siteMetadata","author","social","react_default","a","createElement","style","display","marginBottom","rhythm","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","BlogPostTemplate","render","post","this","props","markdownRemark","siteTitle","title","_this$props$pageConte","pageContext","previous","next","layout","location","marginTop","frontmatter","Object","assign","scale","date","dangerouslySetInnerHTML","__html","html","bio","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","rel","React","Component","pageQuery","SEO","_ref","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Header","_823847756","className","Styles","es","target","Layout","_this$props","children","Fragment","Header_Header","seo","marginLeft","maxWidth","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-templates-blog-post-js-f61976d655f54973f600.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\nimport { Site, File } from '../graphql-types'\n\ntype Props = {\n  site: Site,\n  avatar: File\n}\n\nconst Bio = () => {\n  // 查询必须指定路径，获取响应式图片\n  const data = useStaticQuery<Props>(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/me.jpeg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5)\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`\n        }}\n        imgStyle={{\n          borderRadius: `50%`\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong> who lives and works in ShangHai\n        building useful things.\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title // graphql 查询的数据\n    const { previous, next } = this.props.pageContext // 由 createPage context 传递过来的数据\n    return (\n      <Layout post={post} location={this.props.location} title={siteTitle}>\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1)\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1)\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n// 可以接受 createPage 中的 context 作为参数\n// $slug 为 context 中的 slug\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO({ description, lang, meta, title }: Props) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"a\": {\n      boxShadow: `none`,\n    }\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React, { FunctionComponent } from 'react'\nimport Styles from './Header.module.styl'\n\nimport Image from 'gatsby-image'\nimport { Link } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { File } from '../../graphql-types'\n\ntype Props = {\n  avatar: File\n}\n\nexport const Header: FunctionComponent = props => {\n\n  const data = useStaticQuery<Props>(graphql`\n    query HeaderQuery {\n      avatar: file(absolutePath: {regex: \"/logo.png/\"}) {\n        childImageSharp {\n          fixed(width: 45, height: 45) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={Styles['container']}>\n      <div className={Styles['header']}>\n        <div className={Styles['logo']}>\n          <Link className={Styles['home']} to='/'>\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={'icon'}\n            />\n          </Link>\n        </div>\n        <div className={Styles['navbar']}>\n          <Link to='/' className={Styles['item']}>\n            <i className='iconfont'>&#xe64f;</i>\n            <span className={Styles['title']}>首页</span>\n          </Link>\n          <Link to='/tags' className={Styles['item']}>\n            <i className='iconfont'>&#xe63e;</i>\n            <span className={Styles['title']}>标签</span>\n          </Link>\n          <Link to='/handbook' className={Styles['item']}>\n            <i className='iconfont'>&#xe898;</i>\n            <span className={Styles['title']}>手册</span>\n          </Link>\n          <a className={Styles['item']} href=\"https://github.com/MLuminary\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className='iconfont'>&#xe716;</i>\n            <span className={Styles['title']}>GitHub</span>\n          </a>\n          <Link to='/about' className={Styles['item']}>\n            <i className='iconfont'>&#xe604;</i>\n            <span className={Styles['title']}>关于</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport { Header } from './header';\nimport SEO from './seo';\nimport { MarkdownRemark } from '../graphql-types';\n\ntype Props = {\n  location: Location,\n  title: string,\n  post?: MarkdownRemark\n}\n\nclass Layout extends React.Component<Props> {\n  render() {\n    const { children, title, post } = this.props\n    const description = post ? post.frontmatter ? post.frontmatter.description : '' : ''\n    return (\n      <>\n        <Header />\n        <SEO\n          title={title}\n          description={description}\n        />\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(32),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n          }}\n        >\n\n          <main>{children}</main>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}