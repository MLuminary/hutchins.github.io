{"version":3,"sources":["webpack:///./src/pages/series.tsx","webpack:///./src/styles/pages/series.module.styl"],"names":["Styles","require","Series","location","data","allMarkdownRemark","site","colors","series","edges","reduce","pre","cur","path","node","fileAbsolutePath","timeToRead","title","frontmatter","description","category","substring","search","split","console","info","includes","cardCls","className","Object","keys","map","key","to","style","backgroundColor","Math","ceil","random","length","source","count","query","module","exports"],"mappings":"4FACA,+HAOMA,EAASC,EAAQ,QAoERC,UA/C0B,SAAC,GAAoD,EAAlDC,SAAkD,QAAxCC,KAAcC,GAA0B,EAAhCC,KAAgC,EAA1BD,mBAC5DE,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WACtDC,EAAsBH,EAAkBI,MAAMC,QAAO,SAACC,EAAKC,GAAQ,QACjEC,EAAOD,EAAIE,KAAKC,iBAChBC,EAAaJ,EAAIE,KAAKE,WACtBC,EAAK,UAAGL,EAAIE,KAAKI,mBAAZ,aAAG,EAAsBD,MAC9BE,EAAW,UAAGP,EAAIE,KAAKI,mBAAZ,aAAG,EAAsBC,YACpCC,EAAWP,EAAKQ,UAAUR,EAAKS,OAAO,aAAaC,MAAM,KAAK,GAWpE,OAVAC,QAAQC,KAAKL,GACRT,EAAIS,KAAWT,EAAIS,GAAY,IAEpCI,QAAQC,KAAKZ,GACTA,EAAKa,SAAS,YAChBf,EAAIS,GAAJ,iBAAqBT,EAAIS,GAAzB,CAAoCH,QAAOE,iBAG7CR,EAAIS,GAAJ,MAAyBT,EAAIS,GAAJ,QAA4BT,EAAIS,GAAJ,MAAyB,EAC9ET,EAAIS,GAAJ,WAA+BT,EAAIS,GAAJ,YAA+BJ,EAAeL,EAAIS,GAAJ,WAA8BJ,EACpGL,IACN,IAEH,OADAa,QAAQC,KAAK,SAAUjB,GAErB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmB,QAAS3B,EAAM,MACnB,yBAAK4B,UAAW5B,EAAM,QAAtB,YACA,yBAAK4B,UAAW5B,EAAM,QAExB,yBAAK4B,UAAW5B,EAAM,WACnB6B,OAAOC,KAAKtB,GAAQuB,KAAI,SAAAC,GAAG,OAC1B,kBAAC,OAAD,CAAMA,IAAKA,EAAKC,GAAE,WAAaD,EAAOJ,UAAW5B,EAAM,WACrD,yBAAKkC,MAAO,CAAEC,gBAAiB5B,EAAO6B,KAAKC,KAAKD,KAAKE,UAAY/B,EAAOgC,OAAS,MAAQX,UAAW5B,EAAM,aAC1G,yBAAK4B,UAAW5B,EAAM,cACpB,yBAAK4B,UAAW5B,EAAM,YAAiBQ,EAAOwB,GAAKf,OACnD,yBAAKW,UAAW5B,EAAM,UACpB,kBAAC,IAAD,CAAewC,OAAQhC,EAAOwB,GAAKb,eAErC,yBAAKS,UAAW5B,EAAM,WAAtB,KACKQ,EAAOwB,GAAKS,MADjB,mBACwCjC,EAAOwB,GAAKhB,WADpD,cAaP,IAAM0B,EAAQ,c,qBC7ErBC,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,KAAO,6BAA6B,UAAY,kCAAkC,WAAa,mCAAmC,aAAe,qCAAqC,WAAa,mCAAmC,SAAW,iCAAiC,UAAY","file":"component---src-pages-series-tsx-0fa640770ccf201cc3aa.js","sourcesContent":["import { FunctionComponent } from 'react'\nimport React from 'react'\nimport Layout from '../components/layout/layout'\nimport { Site, MarkdownRemarkConnection } from '../graphql-types'\nimport { graphql, Link } from 'gatsby'\nimport ReactMarkdown from 'react-markdown'\nimport { Card } from '../components/card'\n\nconst Styles = require('../styles/pages/series.module.styl')\n\ntype Props = {\n  data: {\n    site: Site\n    allMarkdownRemark: MarkdownRemarkConnection\n  }\n  location: Location\n}\n\ntype Category = {\n  title?: string\n  description?: string\n  count: number\n  timeToRead: number\n}\n\ntype SeriesProps = {\n  [key: string]: Category\n}\n\nconst Series: FunctionComponent<Props> = ({ location, data: { site, allMarkdownRemark } }) => {\n  const colors = ['#FFE3EB', '#F7F6B7', '#DBF7B7', '#CDF7F2', '#E4DAF7']\n  const series: SeriesProps = allMarkdownRemark.edges.reduce((pre, cur) => {\n    const path = cur.node.fileAbsolutePath!\n    const timeToRead = cur.node.timeToRead!\n    const title = cur.node.frontmatter?.title!\n    const description = cur.node.frontmatter?.description!\n    const category = path.substring(path.search('/series/')).split('/')[2]\n    console.info(category)\n    if (!pre[category]) pre[category] = {} as Category\n    // 每个系列的 readme 包含对这个系列的简介\n    console.info(path)\n    if (path.includes('readme')) {\n      pre[category] = { ...pre[category], title, description }\n    }\n\n    pre[category]['count'] ? pre[category]['count']++ : (pre[category]['count'] = 1)\n    pre[category]['timeToRead'] ? (pre[category]['timeToRead'] += timeToRead) : (pre[category]['timeToRead'] = timeToRead)\n    return pre\n  }, {} as SeriesProps)\n  console.info('series', series)\n  return (\n    <Layout>\n      <Card cardCls={Styles['card']}>\n        <div className={Styles['header']}> Series </div>\n        <div className={Styles['line']} />\n      </Card>\n      <div className={Styles['book_wrap']}>\n        {Object.keys(series).map(key => (\n          <Link key={key} to={`/series/${key}`} className={Styles['book_item']}>\n            <div style={{ backgroundColor: colors[Math.ceil(Math.random() * (colors.length - 1))] }} className={Styles['book_cover']} />\n            <div className={Styles['book_content']}>\n              <div className={Styles['book_title']}>{series[key].title}</div>\n              <div className={Styles['book_des']}>\n                <ReactMarkdown source={series[key].description} />\n              </div>\n              <div className={Styles['book_info']}>\n                共 {series[key].count} 篇系列文章 · 推荐阅读时长 {series[key].timeToRead} 分\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Series\n\nexport const query = graphql`\n  query BookQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/series/\" } }) {\n      edges {\n        node {\n          fileAbsolutePath\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD-HH\")\n            description\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"series-module--card--1X8zy\",\"header\":\"series-module--header--297dP\",\"line\":\"series-module--line--3Aomt\",\"book_item\":\"series-module--book_item--1J8_T\",\"book_cover\":\"series-module--book_cover--2FsY5\",\"book_content\":\"series-module--book_content--2fUkl\",\"book_title\":\"series-module--book_title--3VRLf\",\"book_des\":\"series-module--book_des--3EpPK\",\"book_info\":\"series-module--book_info--38mDc\"};"],"sourceRoot":""}