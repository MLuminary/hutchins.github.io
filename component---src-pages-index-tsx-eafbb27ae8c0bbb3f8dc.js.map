{"version":3,"sources":["webpack:///./src/components/AudioPlayer/audioPlayer.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/seo.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.typed.uint8-array.js"],"names":["Styles","require","AudioPlay","props","_classnames","_classnames2","canvasRef","useRef","_useState","useState","Uint8Array","dataArray","setDataArray","_useState2","permission","setPermission","_useState3","paused","setPaused","_useState4","currentTime","setCurrentTime","_useState5","totalTime","setTotalTime","operatorRef","audioContainerRef","audioRef","animationRef","audioDateRef","analyserRef","useEffect","current","duration","style","transform","offsetWidth","source","context","createMediaElementSource","createAnalyser","connect","destination","disconnect","cancelAnimationFrame","requestAnimationFrame","tick","cxt","getContext","canvas","clearRect","width","height","i","beginPath","lineWidth","moveTo","lineTo","stroke","undefined","window","AudioContext","webkitAudioContext","getByteFrequencyData","slice","react_default","a","createElement","className","onTimeUpdate","loop","ref","controls","sources","map","key","src","onClick","resume","play","classnames","pause","pageQuery","Me","data","spring","useSpring","opacity","from","seo","title","web","div","audioPlayer_AudioPlay","gatsby_browser_entry","to","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","module","exports","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","init","byteOffset","length","this"],"mappings":"wKAGMA,EAASC,EAAQ,KAMVC,EAAsC,SAAAC,GAAS,IAAAC,EAAAC,EACpDC,EAAYC,iBAA0B,MADcC,EAExBC,mBAAqB,IAAIC,WAAW,KAA/DC,EAFmDH,EAAA,GAExCI,EAFwCJ,EAAA,GAAAK,EAGtBJ,oBAAS,GAAtCK,EAHmDD,EAAA,GAGvCE,EAHuCF,EAAA,GAAAG,EAI9BP,oBAAS,GAA9BQ,EAJmDD,EAAA,GAI3CE,EAJ2CF,EAAA,GAAAG,EAKpBV,mBAAS,GAAxCW,EALmDD,EAAA,GAKtCE,EALsCF,EAAA,GAAAG,EAMxBb,mBAAS,GAApCc,EANmDD,EAAA,GAMxCE,EANwCF,EAAA,GAOpDG,EAAclB,mBACdmB,EAAoBnB,mBACpBoB,EAAWpB,iBAAyB,MACpCqB,EAAerB,mBACfsB,EAAetB,iBAAmB,IAAIG,WAAW,KACjDoB,EAAcvB,mBAsDpB,GApDAwB,oBAAU,WACHJ,EAASK,SACdR,EAAaG,EAASK,QAAQC,WAC7B,CAACN,EAASK,UAEbD,oBAAU,WACHN,EAAYO,SAAYN,EAAkBM,SAAYT,IAC3DE,EAAYO,QAAQE,MAAMC,UAA1B,cAAqDf,EAAcG,EACjEG,EAAkBM,QAAQI,YAD5B,yBAEC,CAACX,EAAYO,QAASZ,EAAaM,EAAkBM,UAExDD,oBAAU,WACR,GAAKjB,EAAL,CACA,IAAMuB,EAASC,EAAQC,yBAAyBZ,EAASK,SAKzD,OAJAF,EAAYE,QAAUM,EAAQE,iBAC9BH,EAAOI,QAAQX,EAAYE,SAC3BF,EAAYE,QAAQS,QAAQH,EAAQI,aAE7B,WACLL,EAAOM,aACPb,EAAYE,QAAQW,aACpBC,qBAAqBhB,EAAaI,YAEnC,CAAClB,IAEJiB,oBAAU,WACR,GAAKjB,EAEL,OADAc,EAAaI,QAAUa,sBAAsBC,GACtC,kBAAMF,qBAAqBhB,EAAaI,WAC9C,CAAClB,IAEJiB,oBAAU,WACR,GAAKpB,EAAL,CACA,IAAMoC,EAAMzC,EAAU0B,QAAQgB,WAAW,MACnCC,EAAS3C,EAAU0B,QACzBe,EAAIG,UAAU,EAAG,EAAGD,EAAOE,MAAOF,EAAOG,QAEzC,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtBN,EAAIO,YACJP,EAAIQ,UAAY,EAChBR,EAAIS,OAAW,EAAJH,EAAO,IAClBN,EAAIU,OAAW,EAAJJ,EAAO,GAAM1C,EAAU0C,GAAK,KAAQ1C,EAAU0C,GAAK,KAAO,IACrEN,EAAIW,SAEJX,EAAIO,YACJP,EAAIQ,UAAY,EAChBR,EAAIS,OAAW,EAAJH,EAAO,IAClBN,EAAIU,OAAW,EAAJJ,EAAO,GAAM1C,EAAU0C,GAAK,KAAQ1C,EAAU0C,GAAK,KAAO,IACrEN,EAAIW,WAEL,CAAC/C,EAAWL,EAAU0B,eAEH2B,WAAXC,OAAX,CAEA,IAAMtB,EAAwB,IAAKsB,OAAOC,cAAgBD,OAAOE,oBAE3DhB,EAAO,SAAPA,IACJlB,EAAaI,QAAUa,sBAAsBC,GAC7ChB,EAAYE,QAAQ+B,qBAAqBlC,EAAaG,SACtDpB,EAAaiB,EAAaG,QAAQgC,MAAM,KAe1C,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,WACpBiE,EAAAC,EAAAC,cAAA,SACEE,aAAc,kBAAMhD,EAAeM,EAASK,QAAQZ,cACpDkD,MAAM,EACNF,UAAWpE,EAAM,MACjBuE,IAAK5C,EACL6C,UAAU,GAETrE,EAAMsE,QAAQC,IAAI,SAAArC,GAAM,OACvB4B,EAAAC,EAAAC,cAAA,UAAQQ,IAAI,SAASC,IAAKvC,OAG9B4B,EAAAC,EAAAC,cAAA,OAAKI,IAAK7C,EAAmB0C,UAAWpE,EAAM,aAC5CiE,EAAAC,EAAAC,cAAA,OAAKI,IAAK9C,EAAa2C,UAAWpE,EAAM,UACrCiB,EACCgD,EAAAC,EAAAC,cAAA,KAAGU,QA5BW,WACtBvC,EAAQwC,SACR/D,GAAc,GACdY,EAASK,QAAQ+C,OACjB7D,GAAU,IAwB2BkD,UAAWY,IAAWhF,EAAM,SAAcA,EAAM,KAAU,aAAvF,KAIAiE,EAAAC,EAAAC,cAAA,KAAGU,QAzBY,WACvBlD,EAASK,QAAQiD,QACjB/D,GAAU,IAuB4BkD,UAAWY,IAAWhF,EAAM,UAAeA,EAAM,KAAU,aAAzF,MAKJiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWY,IAAWhF,EAAM,MAAPI,EAAA,GAAAA,EAAoBJ,EAAM,SAAciB,EAAxCb,KAA1B,kBACA6D,EAAAC,EAAAC,cAAA,UAAQC,UAAWY,IAAWhF,EAAM,QAAPK,EAAA,GAAAA,EAAsBL,EAAM,QAAaiB,EAAzCZ,IAAoDkE,IAAKjE,yDCnH9F,IAAMN,EAASC,EAAQ,KAoCViF,GAFEC,UAzBsB,SAAAhF,GAClBA,EAATiF,KADoC,IAGtCC,EAASC,YAAU,CAAEC,QAAS,EAAGpD,UAAW,qBAAsBqD,KAAM,CAAED,QAAS,EAAGpD,UAAW,2BAEvG,OACE8B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKC,MAAM,YACXzB,EAAAC,EAAAC,cAACwB,EAAA,EAASC,IAAV,CAAc1D,MAAOmD,EAAQjB,UAAWpE,EAAM,SAC5CiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,SACtBiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,MAAtB,gBACAiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,OACtBiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,MAAtB,gBACAiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,UAAtB,iCACAiE,EAAAC,EAAAC,cAAA,OAAKC,UAAWpE,EAAM,OACpBiE,EAAAC,EAAAC,cAAC0B,EAAD,CAAWpB,QAAS,CAAC,sBAEvBR,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM1B,UAAWpE,EAAM,MAAW+F,GAAG,UAArC,YAUc,+FCrBtB,SAASC,EAATC,GAAwD,IAAzCC,EAAyCD,EAAzCC,YAAaC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,KAAMV,EAAgBO,EAAhBP,MAC9BW,EAD8CC,EAAAlB,KAC9CiB,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAvC,EAAAC,cAACuC,EAAAxC,EAAD,CACEyC,eAAgB,CACdR,QAEFT,MAAOA,EACPkB,cAAa,QAAUP,EAAKG,aAAad,MACzCU,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASpB,GAEX,CACEmB,KAAI,sBACJC,QAASP,IAEXU,OAAOb,KAKfJ,EAAIkB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNF,YAAW,IAGEF,2BC3Ff,IAAsBmB,EAKpBC,EAAOC,SALaF,EAKWlH,EAAQ,OALRkH,EAAEG,SAAYH,2JCA/C,IAAAI,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAA1D,IAAAsD,EAAAK,EAAAC,EAAA,sBAAAH,EAAA,WAAAH,EAAA,KAAAA,EAAA,IAcyBO,QAAOC,QAELC,IAAMC,cAAc,gFCMhCC,UAjBU,SAAAlC,GAAiC,IAA9BmC,EAA8BnC,EAA9BmC,SAAUC,EAAoBpC,EAApBoC,cACpC,OAAKA,EAGEJ,IAAM9D,cAAcmE,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,2BCPXjB,EAAQ,IAARA,CAAwB,mBAAAkB,GACxB,gBAAAtD,EAAAuD,EAAAC,GACA,OAAAF,EAAAG,KAAAzD,EAAAuD,EAAAC","file":"component---src-pages-index-tsx-eafbb27ae8c0bbb3f8dc.js","sourcesContent":["import React, { FunctionComponent, useEffect, useRef, useState } from 'react'\nimport classnames from 'classnames'\n\nconst Styles = require('./audioPlayer.module.styl')\n\ntype Props = {\n  sources: string[]\n}\n\nexport const AudioPlay: FunctionComponent<Props> = props => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [dataArray, setDataArray] = useState<Uint8Array>(new Uint8Array(75))\n  const [permission, setPermission] = useState(false) // 用户授权播放音乐\n  const [paused, setPaused] = useState(true)\n  const [currentTime, setCurrentTime] = useState(0)\n  const [totalTime, setTotalTime] = useState(0)\n  const operatorRef = useRef<HTMLDivElement>()\n  const audioContainerRef = useRef<HTMLDivElement>()\n  const audioRef = useRef<HTMLAudioElement>(null)\n  const animationRef = useRef<number>()\n  const audioDateRef = useRef<Uint8Array>(new Uint8Array(75))\n  const analyserRef = useRef<AnalyserNode>()\n\n  useEffect(() => {\n    if (!audioRef.current) return\n    setTotalTime(audioRef.current.duration)\n  }, [audioRef.current])\n\n  useEffect(() => {\n    if (!operatorRef.current || !audioContainerRef.current || !totalTime) return\n    operatorRef.current.style.transform = `translateX(${(currentTime / totalTime) *\n      audioContainerRef.current.offsetWidth}px) translateY(-50%)`\n  }, [operatorRef.current, currentTime, audioContainerRef.current])\n\n  useEffect(() => {\n    if (!permission) return\n    const source = context.createMediaElementSource(audioRef.current)\n    analyserRef.current = context.createAnalyser()\n    source.connect(analyserRef.current)\n    analyserRef.current.connect(context.destination)\n\n    return () => {\n      source.disconnect()\n      analyserRef.current.disconnect()\n      cancelAnimationFrame(animationRef.current)\n    }\n  }, [permission])\n\n  useEffect(() => {\n    if (!permission) return\n    animationRef.current = requestAnimationFrame(tick)\n    return () => cancelAnimationFrame(animationRef.current)\n  }, [permission])\n\n  useEffect(() => {\n    if (!dataArray) return\n    const cxt = canvasRef.current.getContext('2d')\n    const canvas = canvasRef.current\n    cxt.clearRect(0, 0, canvas.width, canvas.height)\n    //画线条\n    for (var i = 0; i < 75; i++) {\n      cxt.beginPath()\n      cxt.lineWidth = 2\n      cxt.moveTo(i * 4, 75)\n      cxt.lineTo(i * 4, 75 - (dataArray[i] / 256) * (dataArray[i] / 256) * 30)\n      cxt.stroke()\n\n      cxt.beginPath()\n      cxt.lineWidth = 2\n      cxt.moveTo(i * 4, 75)\n      cxt.lineTo(i * 4, 75 + (dataArray[i] / 256) * (dataArray[i] / 256) * 30)\n      cxt.stroke()\n    }\n  }, [dataArray, canvasRef.current])\n\n  if (typeof window === undefined) return\n  // @ts-ignore\n  const context: AudioContext = new (window.AudioContext || window.webkitAudioContext)()\n\n  const tick = () => {\n    animationRef.current = requestAnimationFrame(tick)\n    analyserRef.current.getByteFrequencyData(audioDateRef.current)\n    setDataArray(audioDateRef.current.slice(0))\n  }\n\n  const handlePlayMusic = () => {\n    context.resume()\n    setPermission(true)\n    audioRef.current.play()\n    setPaused(false)\n  }\n\n  const handlePauseMusic = () => {\n    audioRef.current.pause()\n    setPaused(true)\n  }\n\n  return (\n    <div className={Styles['container']}>\n      <audio\n        onTimeUpdate={() => setCurrentTime(audioRef.current.currentTime)}\n        loop={true}\n        className={Styles['audio']}\n        ref={audioRef}\n        controls={true}\n      >\n        {props.sources.map(source => (\n          <source key='source' src={source} />\n        ))}\n      </audio>\n      <div ref={audioContainerRef} className={Styles['audioPlayer']}>\n        <div ref={operatorRef} className={Styles['operator']}>\n          {paused ? (\n            <i onClick={handlePlayMusic} className={classnames(Styles['playIcon'], Styles['icon'], 'iconfont')}>\n              &#xe699;\n            </i>\n          ) : (\n            <i onClick={handlePauseMusic} className={classnames(Styles['pauseIcon'], Styles['icon'], 'iconfont')}>\n              &#xe650;\n            </i>\n          )}\n        </div>\n        <div className={classnames(Styles['info'], { [Styles['hidden']]: !paused })}>Love - S.E.N.S</div>\n        <canvas className={classnames(Styles['canvas'], { [Styles['hidden']]: paused })} ref={canvasRef} />\n      </div>\n    </div>\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo'\nimport { Site } from '../graphql-types'\nimport { AudioPlay } from '../components/AudioPlayer/audioPlayer'\nimport { animated, useSpring } from 'react-spring'\n\nconst Styles = require('../styles/pages/index.module.styl')\n\ntype Props = {\n  data: {\n    site: Site\n  }\n  location: Location\n}\n\nconst Me: FunctionComponent<Props> = props => {\n  const { data } = props\n\n  const spring = useSpring({ opacity: 1, transform: 'translate3d(0,0,0)', from: { opacity: 0, transform: 'translate3d(0,-30%,0)' } })\n\n  return (\n    <div>\n      <SEO title=\"it's me\" />\n      <animated.div style={spring} className={Styles['content']}>\n        <div className={Styles['avatar']} />\n        <div className={Styles['name']}>Haoqin Zhang</div>\n        <div className={Styles['line']} />\n        <div className={Styles['info']}>Coding Lover</div>\n        <div className={Styles['loveWord']}>痛苦是财富，这话是扯淡。痛苦就是痛苦，对痛苦的思考才是财富</div>\n        <div className={Styles['music']}>\n          <AudioPlay sources={['../music/me.mp3']} />\n        </div>\n        <Link className={Styles['enter']} to='/posts'>\n          Enter\n        </Link>\n      </animated.div>\n    </div>\n  )\n}\n\nexport default Me\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Site } from '../graphql-types'\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO({ description, lang, meta, title }: Props) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n"],"sourceRoot":""}