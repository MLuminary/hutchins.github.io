{"componentChunkName":"component---src-templates-post-detail-tsx","path":"/2018-July-15","webpackCompilationHash":"e568bc029a1371d3c988","result":{"data":{"site":{"siteMetadata":{"title":"Silence","author":"默尝"}},"markdownRemark":{"id":"70d6a7ec-f6b5-529f-b0bd-905bc20842e5","excerpt":"…","html":"<blockquote>\n<p>因为自己是大学生，所以一直都是用的腾讯云学生机，但是前几天腾讯突然告诉我腾讯云学生认证到期了，可能是当时填错了，没办法我就又申请了学生认证 😂，谁让我还是学生呢，但是以前老的学生优惠的学生机就不能再按照学生优惠的方式续费了，所以我又买了一个新的服务器。买完服务器准备手动开始各种配置的时候便发现了一个神器，也就是接下来要介绍给大家的。就是 <a href=\"https://oneinstack.com/\">oneinstack</a> ,可以傻瓜式「一键」安装，想看碰到的 bug 及一些解决方案可以直接跳过配置服务器部分。<a href=\"#遇到的问题\">「jump」</a></p>\n</blockquote>\n<h2>配置服务器环境</h2>\n<p>我写此博客时 oneinstack 的版本为 2018-04-24, 其使用方式如下</p>\n<h3>基本安装</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yum -y <span class=\"token function\">install</span> <span class=\"token function\">wget</span> <span class=\"token function\">screen</span> <span class=\"token function\">curl</span> python <span class=\"token comment\">#for CentOS/Redhat</span>\n<span class=\"token comment\"># apt-get -y install wget screen curl python #for Debian/Ubuntu</span>\n\n<span class=\"token comment\"># 下载源码与脚本</span>\n<span class=\"token function\">wget</span> http://mirrors.linuxeye.com/oneinstack-full.tar.gz <span class=\"token comment\">#包含源码，国内外均可下载</span>\n\n<span class=\"token comment\"># 解压</span>\n<span class=\"token function\">tar</span> xzf oneinstack-full.tar.gz\n\n<span class=\"token comment\"># 如果需要修改目录(安装、数据存储、Nginx日志)，请修改options.conf文件</span>\n<span class=\"token builtin class-name\">cd</span> oneinstack\n\n<span class=\"token comment\"># 如果网路出现中断，可以执行命令`screen -R oneinstack`重新连接安装窗口</span>\n<span class=\"token function\">screen</span> -S oneinstack\n\n<span class=\"token comment\"># 注：请勿sh install.sh或者bash install.sh这样执行</span>\n./install.sh\n\n<span class=\"token comment\"># 接下来根据其指示和自己喜好安装需要的软件即可</span></code></pre></div>\n<h3>node 安装</h3>\n<p>oneinstack 不支持 node 环境的安装，作为一个前端 er, node 还是不可获取的，以前我配置 node 都是去官网下载然后解压然后建立全局软链接的形式，这次也是换了一个更简单的方式</p>\n<h4>node.js v.8x 安装命令</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -</span></code></pre></div>\n<h4>安装 node</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yum <span class=\"token function\">install</span> -y nodejs</code></pre></div>\n<h4>查看 nodejs 安装版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">node -v</code></pre></div>\n<p>至此 node 就已经安装完成，也是全局变量，相比以前也省了很多时间和力气，如果需要也可以安装 nodejs 的版本管理工具，但是在这里我没有安装，正确与否我没有尝试</p>\n<h3>node.js 版本管理器 n</h3>\n<h4>安装 n</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g n1</code></pre></div>\n<h4>安装指定版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#n &lt;version>1</span></code></pre></div>\n<h4>安装最新版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># n latest1</span></code></pre></div>\n<h4>安装稳定版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#n stable1</span></code></pre></div>\n<h4>删除某个版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#n rm &lt;version> 1</span></code></pre></div>\n<h4>查看所有版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#n list</span></code></pre></div>\n<h2>其他配置</h2>\n<h3>添加附加组件</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">./addons.sh</code></pre></div>\n<h3>创建 FTP 虚拟用户账户</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">./pureftpd_vhost.sh</code></pre></div>\n<h3>增删虚拟主机</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 增加虚拟主机./vhost.sh# 删除虚拟主机</span>\n./vhost.sh</code></pre></div>\n<h3>备份和自动备份</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Set backup options ./backup_setup.sh # Start backup, You can add cron jobs./backup.sh # crontab -l # Examples 0 1 * * * cd ~/oneinstack;./backup.sh  > /dev/null 2>&amp;1 &amp;</span></code></pre></div>\n<h3>更新版本</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">./upgrade.sh</code></pre></div>\n<h3>卸载</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">./uninstall.sh</code></pre></div>\n<h2>管理服务</h2>\n<p>Nginx/Tengine/OpenResty:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> nginx <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token operator\">|</span>configtest<span class=\"token punctuation\">}</span></code></pre></div>\n<p>MySQL/MariaDB/Percona:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> mysqld <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token operator\">|</span>status<span class=\"token punctuation\">}</span></code></pre></div>\n<p>PostgreSQL:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> postgresql <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>status<span class=\"token punctuation\">}</span></code></pre></div>\n<p>MongoDB:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> mongod <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token punctuation\">}</span></code></pre></div>\n<p>PHP:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> php-fpm <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token operator\">|</span>status<span class=\"token punctuation\">}</span></code></pre></div>\n<p>HHVM:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> supervisord <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>注</strong>：hhvm 进程交给 supervisord 管理，了解更多请访问《<a href=\"https://blog.linuxeye.com/408.html\">Supervisor 管理 hhvm 进程</a>》\nApache:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> httpd <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>stop<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tomcat:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> tomcat <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pure-Ftpd:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> pureftpd <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>status<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Redis:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> redis-server <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Memcached:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> memcached <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>启用 mysql 服务</h2>\n<p>oneinstack 默认仅允许主机本机链接数据库，需要远程连接数据库的话，需要打开对应端口</p>\n<h3>打开 3306 端口</h3>\n<p>CentOS 系统</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">iptables -I INPUT <span class=\"token number\">4</span> -p tcp -m state --state NEW -m tcp --dport <span class=\"token number\">3306</span> -j ACCEPT <span class=\"token comment\"># 允许访问 3306</span>\n<span class=\"token function\">service</span> iptables save <span class=\"token comment\">#保存 iptables 规则</span>\niptables -nvl <span class=\"token comment\"># 查看 iptables 规则</span></code></pre></div>\n<p>Ubuntu/Debian</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">iptables -I INPUT <span class=\"token number\">4</span> -p tcp -m state --state NEW -m tcp --dport <span class=\"token number\">3306</span> -j ACCEPT <span class=\"token comment\"># 允许访问 3306</span>\niptables-save <span class=\"token operator\">></span> /etc/iptables.up.rules <span class=\"token comment\">#保存 iptables 规则</span></code></pre></div>\n<h3>数据库授权</h3>\n<h4>MySQL8.0 版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># mysql -uroot -p</span>\n MySQL <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> create user db_user@<span class=\"token string\">'%'</span> identified by <span class=\"token string\">'db_pass'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#创建用户</span>\n MySQL <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> grant all privileges on db_name.* to db_user@<span class=\"token string\">'%'</span> with grant option<span class=\"token punctuation\">;</span> <span class=\"token comment\">#授权</span>\n MySQL <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#退出数据库控制台，特别注意有分号</span></code></pre></div>\n<h4>其余 MySQL 版本</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># mysql -uroot -p</span>\n MySQL <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> grant all privileges on db_name.* to db_user@<span class=\"token string\">'%'</span> identified by <span class=\"token string\">'db_pass'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#授权语句，特别注意有分号</span>\n MySQL <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> flush privileges<span class=\"token punctuation\">;</span>\n MySQL <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#退出数据库控制台，特别注意有分号</span></code></pre></div>\n<h2>服务器 https</h2>\n<p>以前的服务器 https 都是自己上的，使用 oneinstack 可以一键让自己的服务器带点绿 🌲</p>\n<p>运行 <code class=\"language-text\">./vhost.sh</code> 就会跳到配置虚拟环境界面，oneinstack 采用 Let’s Encrypt https 证书，免费使用为 90 天，到期后 oneinstack 会自动帮你续费，配置完毕后在默认文件夹里添加项目就可以输入网址以 https 的方式访问</p>\n<h2>遇到的问题</h2>\n<h3>无法访问带端口域名</h3>\n<p>我自己创建了一个二级域名 api.×××× 来作为我一些 api 接口的提供网址，然后想用 oneinstack 为其上 https，向服务器中上传 node 文件用 pm2 跑起来后，本来在本地 localhost:3000 可以访问的文件，到了服务器后无法通过 api.××××:3000 来访问，最开始想到了类似阿里云安全组的问题，然后我去后台看了下我的服务器的安全组，并没有禁用 <code class=\"language-text\">3000</code> 端口。后来脑子里自己冒出来了一个想法，用 nginx 反向代理，在这里我就不具体给出反向代理的代码了，格式很简单，就是访问 api.××××/getApi 相当于访问 api.××××:3000/getApi ,然后竟然就成功访问到了 😑</p>\n<p>2018/9/10 补充: oneinstack 默认端口都是不开放的，因此我感觉是未将 <code class=\"language-text\">3000</code> 端口开放的原因</p>\n<h3>引用 api 碰到的跨域问题</h3>\n<p>主域名下的项目引用 api.×××× 下的 api 是要跨域的，谷歌搜索到的解决方案基本是如下代码</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'Access-Control-Allow-Headers'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Content-Type,Content-Length, Authorization, Accept,X-Requested-With'</span>\n  <span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Methods'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PUT,POST,GET,DELETE,OPTIONS'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'X-Powered-By'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' 3.2.1'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'OPTIONS'</span><span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">/*让options请求快速返回*/</span> <span class=\"token keyword\">else</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>但是并没有解决我的跨域问题，我是在 nginx 反向代理时加入如下代码实现的</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">location / <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    add_header Access-Control-Allow-Origin *<span class=\"token punctuation\">;</span></span>\t<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>https 引用 http 下的接口报错</h3>\n<p>我的 api.×××× 域名在开始的时候上 https 并没有成功，我就使用的是 http 协议，但是解决了跨域问题后又报错，报错的内容大致就是 https 下无法引用 http 中的接口，最后我其实换了一个域名又上了 https … 🐶</p>\n<h2>最后</h2>\n<p>最后基本项目都已部署到了服务器上，访问项目也有耀眼的小绿标，还是 hin 开心的 😃</p>","frontmatter":{"title":"记一次 oneinstack 配置服务器","date":"July 15, 2018"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/post-2018-07-15/","previous":{"fields":{"slug":"/post-2018-07-17/"},"frontmatter":{"title":"让服务器带点绿","date":"2018-July-17"}},"next":{"fields":{"slug":"/post-2018-05-20/"},"frontmatter":{"title":"FlexDisplayRoom","date":"2018-May-20"}}}}}