{"componentChunkName":"component---src-templates-post-detail-tsx","path":"/series/design-pattern/post-1565216437000","result":{"data":{"site":{"siteMetadata":{"title":"Silence","author":"默尝"}},"markdownRemark":{"id":"76ecfc29-6861-52a3-8958-5edcb42c0fc3","excerpt":"适配器模式「Adapter Pattern」：将一个接口转换成客户希望的另一个接口，适配器模式使接口不兼容的那些类可以一起工作，其别名为包装器「Wrapper…","html":"<blockquote>\n<p>适配器模式「Adapter Pattern」：将一个接口转换成客户希望的另一个接口，适配器模式使接口不兼容的那些类可以一起工作，其别名为包装器「Wrapper」</p>\n</blockquote>\n<h2>模式动机</h2>\n<p>假设我们现有的项目需要对接新的仓库，但是仓库中很多接口不适用于我们的项目，在这种情况下，我们不可能去修改库中的源代码，这个时候我们就需要将库中的接口套上一层适配器，就如同 vga 线转 hdmi 的转换器一样。</p>\n<h2>实现</h2>\n<p>假设谷歌地图与百度地图的渲染如下</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> googleMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">show</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始渲染谷歌地图'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> baiduMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">display</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始渲染百度地图'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>但是我们的渲染函数 <code class=\"language-text\">renderMap</code> 默认调用地图的 <code class=\"language-text\">show</code> 方法，所以如果 <code class=\"language-text\">renderMap</code> 直接调用 <code class=\"language-text\">baiduMap</code> 那肯定会报错，所以我们可以写一个百度地图的适配器</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> baiduMapAdapter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">show</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    baiduMap<span class=\"token punctuation\">.</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 这样就可以正确的渲染了</span>\n<span class=\"token function\">renderMap</span><span class=\"token punctuation\">(</span>googleMap<span class=\"token punctuation\">)</span>\n<span class=\"token function\">renderMap</span><span class=\"token punctuation\">(</span>baiduMapAdapter<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>小结</h2>\n<p>适配器模式将目标类和适配者类解耦，增加了类的透明性和复用性，同时系统的灵活性和扩展性都非常好，更换适配器或者增加新的适配器都非常方便，符合「开闭原则」。</p>","frontmatter":{"title":"适配器模式","date":"August 07, 2019"}}},"pageContext":{"slug":"/design-pattern/shi-pei-qi-mo-shi/","previous":{"fileAbsolutePath":"/Users/test/gitMaster/Silence/content/series/design-pattern/zhuang-tai-mo-shi.md","frontmatter":{"date":"2019-08-06T22:20:37.000Z","title":"状态模式"},"fields":{"slug":"/design-pattern/zhuang-tai-mo-shi/"}},"next":{"fileAbsolutePath":"/Users/test/gitMaster/Silence/content/series/design-pattern/dan-yi-zhi-ze-yuan-ze.md","frontmatter":{"date":"2019-08-08T22:20:37.000Z","title":"单一职责原则"},"fields":{"slug":"/design-pattern/dan-yi-zhi-ze-yuan-ze/"}},"prePath":"/series/design-pattern/post-1565130037000","nextPath":"/series/design-pattern/post-1565302837000"}},"staticQueryHashes":["1747850863","63159454"]}