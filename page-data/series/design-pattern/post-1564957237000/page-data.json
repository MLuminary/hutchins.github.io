{"componentChunkName":"component---src-templates-post-detail-tsx","path":"/series/design-pattern/post-1564957237000","result":{"data":{"site":{"siteMetadata":{"title":"Silence","author":"默尝"}},"markdownRemark":{"id":"99d60e96-088a-5763-879c-1db7afd31e89","excerpt":"中介者模式「Mediator Pattern…","html":"<blockquote>\n<p>中介者模式「Mediator Pattern」：用一个中介对象来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。中介者模式又称为调停者模式，它是一种对象行为型模式。</p>\n</blockquote>\n<h2>模式动机</h2>\n<p>对于一个模块来说可能有很多个对象组成，而且这些对象之间可能存在相互的引用，为了减少对象两两之间复杂的引用关系，使之成为一个松耦合的系统，我们需要一个中介者对象，来使各个对象之间的相互联系关系转换为对象只需与中介者对象联系的关系，这样各个对象完全就不需要考虑其他对象的变化，只需要关心中介者对象就可以</p>\n<h2>实现</h2>\n<p>泡泡堂游戏是童年时候的游戏，当玩家数目为 2 时，其中一个玩家死亡及结束，同时通知它的对手胜利。但是如果是 4 个玩家或 8 个玩家，一般就需要分红蓝两队进行游戏。每当有一个玩家死亡时，<strong>都需要检测是不是最后一个死亡的玩家，如果是的话需要给本队每个人发送团队失败，也需要给对方每个人发送团队胜利</strong>。假如不使用中介者模式。每个玩家都需要记录其他玩家的一些信息。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Player</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> teamColor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>partners <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 队友列表</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enemies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 敌人列表</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">'live'</span> <span class=\"token comment\">// 玩家状态</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name <span class=\"token comment\">// 角色名字</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>teamColor <span class=\"token operator\">=</span> teamColor <span class=\"token comment\">// 队伍颜色</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当玩家胜利或失败时提示信息</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">win</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 玩家团队胜利</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'winner: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">lose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 玩家团队失败</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loser: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当玩家死亡时需要遍历队友及对手</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">die</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 玩家死亡</span>\n  <span class=\"token keyword\">let</span> all_dead <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">'dead'</span> <span class=\"token comment\">// 设置玩家状态为死亡</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> partner<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>partner <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>partners<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 遍历队友列表</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>partner<span class=\"token punctuation\">.</span>state <span class=\"token operator\">!==</span> <span class=\"token string\">'dead'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 如果还有一个队友没有死亡，则游戏还未失败</span>\n      all_dead <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>all_dead <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">lose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 通知自己游戏失败</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> partner<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>partner <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>partners<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 通知队友团队失败</span>\n      partner<span class=\"token punctuation\">.</span><span class=\"token function\">lose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> enemy<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>enemy <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enemies<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 通知敌人团队胜利</span>\n      enemy<span class=\"token punctuation\">.</span><span class=\"token function\">win</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接下来编写创建玩家的工厂函数, 当有人加入时还需要遍历每个现存的玩家将新玩家添加到队友或对手的列表当中</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 创建玩家</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">playerFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> teamColor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> newPlayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> teamColor<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>player <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 通知所有的玩家，有新角色加入</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">.</span>teamColor <span class=\"token operator\">===</span> newPlayer<span class=\"token punctuation\">.</span>teamColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 如果是同一队的玩家</span>\n      player<span class=\"token punctuation\">.</span>partners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newPlayer<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 相互添加到队友列表</span>\n      newPlayer<span class=\"token punctuation\">.</span>partners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      player<span class=\"token punctuation\">.</span>enemies<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newPlayer<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 相互添加到敌人列表</span>\n      newPlayer<span class=\"token punctuation\">.</span>enemies<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    players<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newPlayer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> newPlayer\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>随着玩家的增多，队伍的增多，就不仅仅是遍历能够解决的问题了。</p>\n<h3>用中介者改造</h3>\n<p>创建一个 <code class=\"language-text\">playerDirector</code> 并暴露一个 <code class=\"language-text\">receiveMessage</code> 负责接受各个 player 对象发送的消息。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> playerDirector <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> players <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 保存所有玩家</span>\n    operations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 中介者可以执行的操作</span>\n  <span class=\"token comment\">/****************新增一个玩家***************************/</span>\n\n  operations<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addPlayer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> teamColor <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>teamColor <span class=\"token comment\">// 玩家的队伍颜色</span>\n    players<span class=\"token punctuation\">[</span>teamColor<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>teamColor<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 如果该颜色的玩家还没有成立队伍，则新成立一个队伍</span>\n    players<span class=\"token punctuation\">[</span>teamColor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加玩家进队伍</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/****************移除一个玩家***************************/</span>\n\n  operations<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removePlayer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> teamColor <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>teamColor<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 玩家的队伍颜色</span>\n      teamPlayers <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>teamColor<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 该队伍所有成员</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> teamPlayers<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 遍历删除</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>teamPlayers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> player<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        teamPlayers<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/****************玩家换队***************************/</span>\n\n  operations<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">changeTeam</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player<span class=\"token punctuation\">,</span> newTeamColor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 玩家换队</span>\n    operations<span class=\"token punctuation\">.</span><span class=\"token function\">removePlayer</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 从原队伍中删除</span>\n    player<span class=\"token punctuation\">.</span>teamColor <span class=\"token operator\">=</span> newTeamColor <span class=\"token comment\">// 改变队伍颜色</span>\n    operations<span class=\"token punctuation\">.</span><span class=\"token function\">addPlayer</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 增加到新队伍中</span>\n  <span class=\"token punctuation\">}</span>\n\n  operations<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">playerDead</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> teamColor <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>teamColor<span class=\"token punctuation\">,</span>\n      teamPlayers <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>teamColor<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">let</span> all_dead <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token comment\">// 玩家死亡 // 玩家所在队伍</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>player <span class=\"token operator\">=</span> teamPlayers<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">.</span>state <span class=\"token operator\">!==</span> <span class=\"token string\">'dead'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        all_dead <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n        <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>all_dead <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 全部死亡</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>player <span class=\"token operator\">=</span> teamPlayers<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        player<span class=\"token punctuation\">.</span><span class=\"token function\">lose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 本队所有玩家 lose</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> color <span class=\"token keyword\">in</span> players<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">!==</span> teamColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> teamPlayers <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>color<span class=\"token punctuation\">]</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>player <span class=\"token operator\">=</span> teamPlayers<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            player<span class=\"token punctuation\">.</span><span class=\"token function\">win</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reciveMessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span>\n    operations<span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    reciveMessage<span class=\"token operator\">:</span> reciveMessage<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以看到，<strong>除了中介者本身，没有一个玩家知道其他任何玩家的存在</strong>，玩家与玩家之间的耦合关系已经完全解除，每个玩家的任何操作都不需要通知其他玩家，而<strong>只需要给中介者发送一个消息，中介者处理完消息之后会把处理结果反馈给其他玩家对象</strong>，我们还可以给中介者对象扩展更多的功能，以适应游戏需求不断的变化。</p>\n<h2>小结</h2>\n<p>中介者模式是迎合迪米特法则的一种实现。迪米特法则也叫最少知识原则，是指一个对象应该尽可能少地了解另外的对象(类似不和陌生人说话)。如果对象之间的耦合性太高，一个对象发生改变之后，难免会影响到其他的对象，跟“城门失火，殃及池鱼”的道理是一样的。而在中介者模式里，对象之间几乎不知道彼此的存在，它们只能通过中介者对象来互相影响对方。</p>\n<p>但是中介者模式也存在一些缺点。缺点就是会新增一个中介者对象，因为它负责与各个对象之间的交互，通常中介者对象的复杂性就会很高，其自身就变成一个难以维护的对象。</p>","frontmatter":{"title":"中介者模式","date":"August 04, 2019"}}},"pageContext":{"slug":"/design-pattern/zhong-jie-zhe-mo-shi/","previous":{"fileAbsolutePath":"/Users/zhanghaoqin/gitMaster/Silence/content/series/design-pattern/zhi-ze-lian-mo-shi.md","frontmatter":{"date":"2019-08-03T22:20:37.000Z","title":"职责链模式"},"fields":{"slug":"/design-pattern/zhi-ze-lian-mo-shi/"}},"next":{"fileAbsolutePath":"/Users/zhanghaoqin/gitMaster/Silence/content/series/design-pattern/zhuang-shi-zhe-mo-shi.md","frontmatter":{"date":"2019-08-05T22:20:37.000Z","title":"装饰者模式"},"fields":{"slug":"/design-pattern/zhuang-shi-zhe-mo-shi/"}},"prePath":"/series/design-pattern/post-1564870837000","nextPath":"/series/design-pattern/post-1565043637000"}},"staticQueryHashes":["1747850863","63159454"]}