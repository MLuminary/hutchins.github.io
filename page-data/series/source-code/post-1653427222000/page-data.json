{"componentChunkName":"component---src-templates-post-detail-tsx","path":"/series/source-code/post-1653427222000","result":{"data":{"site":{"siteMetadata":{"title":"Silence","author":"默尝"}},"markdownRemark":{"id":"5e9df55f-495b-5a3c-b8ef-a90c3ef263dc","excerpt":"build your own redux 明确需求 以下是一段 redux 的简单使用例子 通过上述例子，我们总结出，我们需要实现的方法只有一个，那就是 createStore，这个方法接受一个 reducer 方法作为参数，返回一个 store 对象，store 对象中包含 subscribe、dispatch…","html":"<blockquote>\n<p>build your own redux</p>\n</blockquote>\n<h2>明确需求</h2>\n<p>以下是一段 redux 的简单使用例子</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n\n<span class=\"token keyword\">const</span> initState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'hutchins'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">25</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> initState<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> initState\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'UPDATE_NAME'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'UPDATE_AGE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n      age<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>payload\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> state\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">updateName</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'UPDATE_NAME'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> name\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">updateAge</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">age</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'UPDATE_AGE'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> age\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nactions<span class=\"token punctuation\">.</span><span class=\"token function\">updateAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name: \"hutchins\", age: 20}</span>\nactions<span class=\"token punctuation\">.</span><span class=\"token function\">updateName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hengheng'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name: \"hengheng\", age: 20}</span></code></pre></div>\n<p>通过上述例子，我们总结出，我们需要实现的方法只有一个，那就是 createStore，这个方法接受一个 reducer 方法作为参数，返回一个 store 对象，store 对象中包含 subscribe、dispatch、getState 方法。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AnyAction</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Action</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Allows any extra properties to be defined in an action.</span>\n  <span class=\"token punctuation\">[</span>extraProps<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Reducer<span class=\"token operator\">&lt;</span><span class=\"token constant\">S</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span> <span class=\"token keyword\">extends</span> Action <span class=\"token operator\">=</span> AnyAction<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">S</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Store</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getState</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>\n  <span class=\"token function-variable function\">dispatch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>action<span class=\"token operator\">:</span> AnyAction<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n  <span class=\"token function-variable function\">subscribe</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token function-variable function\">listener</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">unsubscribe</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> createStore <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>reducer<span class=\"token operator\">:</span> Reducer<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Store</code></pre></div>\n<h2>需求实现</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> createStore <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>reducer<span class=\"token operator\">:</span> Reducer<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Store <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> state<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">let</span> listeners<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// 订阅</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subscribe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>listener<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    listeners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">unsubscribe</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        listeners <span class=\"token operator\">=</span> listeners<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> l <span class=\"token operator\">!==</span> listener<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 触发</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dispatch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>action<span class=\"token operator\">:</span> AnyAction<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span>\n    listeners<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">l</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 初始化 state</span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'redux init'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getState</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    getState<span class=\"token punctuation\">,</span>\n    subscribe<span class=\"token punctuation\">,</span>\n    dispatch\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以看到，redux 就是一个非常经典的订阅发布模式，subscribe 订阅，dispatch 获得 action 的给 reducer 去更新 state 并通知所有订阅者</p>","frontmatter":{"title":"Redux","date":"May 24, 2022"}}},"pageContext":{"slug":"/source-code/build your own redux/","previous":{"fileAbsolutePath":"/Users/test/gitMaster/Silence/content/series/source-code/build-your-own-mobx.md","frontmatter":{"date":"2022-05-24T20:20:22.000Z","title":"Mobx"},"fields":{"slug":"/source-code/build-your-own-mobx/"}},"next":null,"prePath":"/series/source-code/post-1653423622000"}},"staticQueryHashes":["1747850863","63159454"]}