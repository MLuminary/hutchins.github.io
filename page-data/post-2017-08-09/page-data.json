{"componentChunkName":"component---src-templates-post-detail-tsx","path":"/post-2017-08-09","webpackCompilationHash":"a7ebe64dfd457111674d","result":{"data":{"site":{"siteMetadata":{"title":"Silence","author":"默尝"}},"markdownRemark":{"id":"b2b0f5a7-95be-5f94-8dba-76da164c360c","excerpt":"文档流 我们常说的文档流分为三种，普通流，浮动流和定位流。在这里简单的介绍一下。 在「普通流」中，元素按照在 HTML…","html":"<h2>文档流</h2>\n<p>我们常说的文档流分为三种，普通流，浮动流和定位流。在这里简单的介绍一下。</p>\n<p>在「普通流」中，元素按照在 HTML 中的先后位置至上而下布局，块级元素从上到下依次排列，框之间的垂直距离由框的垂直 <code class=\"language-text\">margin</code> 计算得到。行内元素在一行中水平布置，直到占满一行则换行</p>\n<p>「浮动流」就是元素被设置了浮动属性，一开始还是按照普通流布局，但是会根据浮动的方向移动。</p>\n<p>「定位流」就是设置了定位属性，元素完全脱离普通流。</p>\n<h2>BFC 定义</h2>\n<p>BFC(Block Formating Context),直译过来就是「块级格式化上下文」(在 CSS3 中，BFC 叫做 Flow Root)。FC 就是其实就是普通流的意思，是一块渲染区域，有他的渲染规则。那 B 就是 block 就是块级元素。<strong>简单的理解来说，有一块独立的渲染区域，只有 block 元素，这些 block 元素按照此渲染区域的规则布局，并且不受这个区域外部的其它元素影响。</strong></p>\n<h2>BFC 的触发</h2>\n<ul>\n<li>根元素</li>\n<li>浮动元素</li>\n<li>绝对定位和固定定位</li>\n<li>display 为 inline-block||table-cell||table-caption||flex||inline-flex</li>\n<li>overflow 不是 visible</li>\n</ul>\n<p>满足以上任意一个条件都可以触发 BFC，这里注意一下，触发 BFC 不是元素本身变成了 BFC，而是这个元素带有了 BFC 的规则。</p>\n<h2>BFC 的规则</h2>\n<p>为什么要触发 BFC，那 BFC 到底有什么规则，有什么好处呢？</p>\n<ul>\n<li>Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠</li>\n<li>BFC 的区域不会与 float box 重叠。</li>\n<li>计算 BFC 的高度时，浮动元素也参与计算</li>\n</ul>\n<h2>作用</h2>\n<p>其实 BFC 完全贯彻的一点就是，<strong>BFC 是一个独立的不受外部影响的一个渲染区域，他也不会去影响别的元素。</strong>，记住并理解这句话也就是理解了 BFC ，因为 BFC 的作用都是根据这一规则产生的</p>\n<h3>margin 重叠</h3>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>box1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>box2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>我们知道两个 <code class=\"language-text\">box1</code> 和 <code class=\"language-text\">box2</code> 的中间间距会发生 <code class=\"language-text\">margin</code> 重叠并只有 <code class=\"language-text\">100px</code>,那是因为他们同在 html 下的一个大的 BFC 中的一个渲染区域中，我们只要让他们两个的 BFC 区域不同，他们两个就不会发生 <code class=\"language-text\">margin</code> 重叠.</p>\n<p>在 <code class=\"language-text\">box2</code> 添加 div 包裹层,然后在此包裹层中添加任意规则属性，就会发现 <code class=\"language-text\">margin</code> 重叠问题已经解决.因为此时 <code class=\"language-text\">box2</code> 身处的 <code class=\"language-text\">BFC</code> 和 <code class=\"language-text\">box1</code> 就不相同了。</p>\n<h3>清除浮动</h3>\n<p>剩下两个规则都与浮动有关，其实我听说 BFC 这个名词也是因为清除浮动，因为 BFC 不能影响外部的布局，所以计算高度时，浮动也参加运算，因此就解决了高度塌陷这个问题。</p>\n<h2>总结</h2>\n<p>前端之路还在继续，认识了 BFC 以后也会去多多了解磨合。总之现在严格记住的一点就是<strong>他是一个独立的不影响外部也不受外部影响的区域，那其他的特性都是建立在此基础上的。</strong></p>","frontmatter":{"title":"你好！BFC!","date":"August 09, 2017"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/你好！BFC/","previous":{"fields":{"slug":"/js函数基础/"},"frontmatter":{"title":"Js 函数基础","date":"2017-08-17"}},"next":{"fields":{"slug":"/谈谈值传递/"},"frontmatter":{"title":"谈谈值传递","date":"2017-07-25"}}}}}