{"componentChunkName":"component---src-templates-post-detail-tsx","path":"/对象类型的辨别/","webpackCompilationHash":"5ee947e49c106553cd05","result":{"data":{"site":{"siteMetadata":{"title":"Silence","author":"默尝"}},"markdownRemark":{"id":"d5a803ce-45c8-5a53-b759-128120d4af8a","excerpt":"对象类别的鉴别 typeof 少部分人可能首先会想到  可以看出  是可以判断出基本数据类型的，函数也能判断出来，但是对象、数组、日期都会返回 object…","html":"<h1>对象类别的鉴别</h1>\n<h2>typeof</h2>\n<p>少部分人可能首先会想到 <code class=\"language-text\">typeof</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  b <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  s <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>\n  x <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">obj1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  obj4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">,</span> <span class=\"token comment\">//number</span>\n  <span class=\"token keyword\">typeof</span> b<span class=\"token punctuation\">,</span> <span class=\"token comment\">//boolean</span>\n  <span class=\"token keyword\">typeof</span> s<span class=\"token punctuation\">,</span> <span class=\"token comment\">//string</span>\n  <span class=\"token keyword\">typeof</span> x<span class=\"token punctuation\">,</span> <span class=\"token comment\">//object</span>\n  <span class=\"token keyword\">typeof</span> y<span class=\"token punctuation\">,</span> <span class=\"token comment\">//undefined</span>\n  <span class=\"token keyword\">typeof</span> obj1<span class=\"token punctuation\">,</span> <span class=\"token comment\">//function</span>\n  <span class=\"token keyword\">typeof</span> obj2<span class=\"token punctuation\">,</span> <span class=\"token comment\">//object</span>\n  <span class=\"token keyword\">typeof</span> obj3<span class=\"token punctuation\">,</span> <span class=\"token comment\">//object</span>\n  <span class=\"token keyword\">typeof</span> obj4 <span class=\"token comment\">//object</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以看出 <code class=\"language-text\">typeof</code> 是可以判断出基本数据类型的，函数也能判断出来，但是对象、数组、日期都会返回 object,这样就根本无法判断一个对象是不是数组类型。所以 <code class=\"language-text\">typeof</code> 宣告无能为力</p>\n<h2>判断其父级原型对象</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  obj3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">==</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">==</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">==</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>但是 <code class=\"language-text\">__proto__</code> 是内部属性，本不应该被访问到，我们可以用 <code class=\"language-text\">Object.getPrototypeOf(obj)</code> 方法来代替他，虽然这个方法其实内部原理也是他，但是还是有不同的。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<h2>判断其构造函数</h2>\n<p><code class=\"language-text\">obj instanceof Array</code> 判断 <code class=\"language-text\">obj</code> 是不是被构造函数 <code class=\"language-text\">Array</code> 创造出来的</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1 <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2 <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3 <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>但<code class=\"language-text\">instanceof</code> 不仅判断直接父类型，而是所有在原型链上的类型，都返回 <code class=\"language-text\">true</code> ,所以如果你创建一个对象但是把他的 <code class=\"language-text\">__proto__</code> 指向 <code class=\"language-text\">Array</code> 的原型，然后判断其类型，也会返回 <code class=\"language-text\">true</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">obj1<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1 <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span></code></pre></div>\n<h2>判断对象内部的 class 属性</h2>\n<p>每个对象内部，都有一个隐藏的 <code class=\"language-text\">class</code> 属性，记录该对象创建时的数据类型 <code class=\"language-text\">class</code> 属性不会随继承关系的改变而改变。（就相当于查人的 DNA 了吧，小样还想伪装。）</p>\n<p>这里有一个问题：内置类型的原型对象中几乎都重写了新的 <code class=\"language-text\">toString()</code>，只有最顶层的 <code class=\"language-text\">toString()</code> 才能输出对象的 <code class=\"language-text\">class</code> 属性值，</p>\n<p>因此我们可以用 <code class=\"language-text\">call</code> 来使用最牛皮的身份鉴别</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token comment\">/*[object Object]*/</span> <span class=\"token string\">'[object Array]'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token comment\">/*[object Array]*/</span> <span class=\"token string\">'[object Array]'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token comment\">/*[object Date]*/</span> <span class=\"token string\">'[object Array]'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<h2>Array.isArray</h2>\n<p><code class=\"language-text\">Array.isArray</code> 也可以弥补 <code class=\"language-text\">typeof</code> 的不足</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>","frontmatter":{"title":"对象类别的鉴别","date":"August 24, 2017"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/对象类型的辨别/","previous":{"fields":{"slug":"/图解作用域及闭包/"},"frontmatter":{"title":"图解作用域及闭包"}},"next":{"fields":{"slug":"/简易扫雷小游戏/"},"frontmatter":{"title":"简易扫雷小游戏"}}}}}