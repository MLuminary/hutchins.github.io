{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/utils/typography.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/bio.tsx"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","Object","assign","scale","display","date","dangerouslySetInnerHTML","__html","html","_components_bio__WEBPACK_IMPORTED_MODULE_3__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","SEO","_ref","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","_219426047","react_default","className","Styles","es","gatsby_image_default","fixed","avatar","childImageSharp","alt","Layout","_this$props","children","marginLeft","marginRight","maxWidth","Header_Header","Date","getFullYear","href","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","json","Bio","_public_static_d_1130368741_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","minWidth","borderRadius","imgStyle","twitter"],"mappings":"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","file":"component---src-templates-blog-post-js-2936c5389a1895bfe61b.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title // graphql 查询的数据\n    const { previous, next } = this.props.pageContext // 由 createPage context 传递过来的数据\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1)\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1)\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n// 可以接受 createPage 中的 context 作为参数\n// $slug 为 context 中的 slug\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Site } from \"../graphql-types\";\n\ntype Props = {\n  description?: string,\n  lang?: string,\n  meta?: object[],\n  title: string\n}\n\ntype QueryProps = {\n  site: Site\n}\n\nfunction SEO<Props>({ description, lang, meta, title }) {\n  const { site } = useStaticQuery<QueryProps>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React, { FunctionComponent } from 'react'\nimport Styles from './Header.module.styl'\n\nimport Image from 'gatsby-image'\nimport { Link } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { File } from '../../graphql-types'\n\ntype Props = {\n  avatar: File\n}\n\nexport const Header: FunctionComponent = props => {\n\n  const data = useStaticQuery<Props>(graphql`\n    query HeaderQuery {\n      avatar: file(absolutePath: {regex: \"/logo.png/\"}) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={Styles['header']}>\n      <div className={Styles['logo']}>\n        <Link className={Styles['home']} to='/'>\n          <Image\n            fixed={data.avatar.childImageSharp.fixed}\n            alt={'icon'}\n          />\n        </Link>\n      </div>\n      <div className={Styles['nav-bar']}>\n        <div className={Styles['nav-item']}>\n          <i className='iconfont'>&#xe608;</i>\n        </div>\n        <div className={Styles['nav-item']}>about</div>\n        <div className={Styles['nav-item']}>home</div>\n        <div className={Styles['nav-item']}>test</div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport { Header } from './header';\n\ntype Props = {\n  location: Location,\n  title: string,\n}\n\nclass Layout extends React.Component<Props> {\n  render() {\n    const { children, title } = this.props\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n        }}\n      >\n        <Header />\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\nimport { Site, File } from '../graphql-types'\n\ntype Props = {\n  site: Site,\n  avatar: File\n}\n\nconst Bio = () => {\n  // 查询必须指定路径，获取响应式图片\n  const data = useStaticQuery<Props>(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/me.jpeg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5)\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`\n        }}\n        imgStyle={{\n          borderRadius: `50%`\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong> who lives and works in ShangHai\n        building useful things.\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n"],"sourceRoot":""}